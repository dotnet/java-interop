# Java.Interop Pipelines

trigger:
  - master
  - d16-*

pr:
  branches:
    include:
    - master
    - d16-*
  paths:
    exclude:
    - README.md
    - Documentation/*

# Global variables
variables:
  DotNetCoreVersion: 3.1.300
  HostedMac: Hosted Mac Internal
  HostedWinVS2019: Hosted Windows 2019 with VS2019

jobs:
- job: windows_build
  displayName: Windows - .NET Framework
  pool: $(HostedWinVS2019)
  timeoutInMinutes: 20
  workspace:
    clean: all
  steps:
  - checkout: self
    submodules: recursive

  - template: templates\install-dependencies.yaml

  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: 5.x

  - task: NuGetCommand@2
    inputs:
      command: restore
      restoreSolution: 'external\xamarin-android-tools\Xamarin.Android.Tools.sln'
      
  - task: MSBuild@1
    displayName: MSBuild Java.Interop.sln /t:Prepare
    inputs:
      solution: Java.Interop.sln
      configuration: $(Build.Configuration)
      msbuildArguments: /restore /t:Prepare

  - task: MSBuild@1
    displayName: MSBuild Java.Interop.sln
    inputs:
      solution: Java.Interop.sln
      configuration: $(Build.Configuration)
      msbuildArguments: /restore
    
  - task: MSBuild@1
    displayName: MSBuild RunNUnitTests.targets
    inputs:
      solution: build-tools/scripts/RunNUnitTests.targets
      configuration: $(Build.Configuration)
      msbuildArguments: /p:TestAssembly="bin\Test$(Build.Configuration)\generator-Tests.dll;bin\Test$(Build.Configuration)\Java.Interop.Tools.JavaCallableWrappers-Tests.dll;bin\Test$(Build.Configuration)\logcat-parse-Tests.dll;bin\Test$(Build.Configuration)\Xamarin.Android.Tools.ApiXmlAdjuster-Tests.dll;bin\Test$(Build.Configuration)\Xamarin.Android.Tools.Bytecode-Tests.dll;bin\Test$(Build.Configuration)\Java.Interop.Tools.Generator-Tests.dll;bin\Test$(Build.Configuration)\Xamarin.SourceWriter-Tests.dll"
    condition: succeededOrFailed()

  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: TestResult-*.xml
    condition: succeededOrFailed()

- job: windows_dotnet_build
  displayName: Windows - .NET Core
  pool: $(HostedWinVS2019)
  timeoutInMinutes: 20
  workspace:
    clean: all
  steps:
  - checkout: self
    submodules: recursive

  - template: templates\install-dependencies.yaml

  - template: templates\core-build.yaml

  - template: templates\core-tests.yaml

  - template: templates\fail-on-issue.yaml
    
- job: mac_build
  displayName: Mac - Mono
  pool: $(HostedMac)
  timeoutInMinutes: 20
  workspace:
    clean: all
  steps:
  - checkout: self
    submodules: recursive

  - template: templates\install-dependencies.yaml
    
  - script: make prepare CONFIGURATION=$(Build.Configuration)
    displayName: make prepare
    
  - script: make all CONFIGURATION=$(Build.Configuration)
    displayName: make all
    
  - script: |
      r=0
      make run-all-tests CONFIGURATION=$(Build.Configuration) || r=$?
      jar cf xatb.jar -C tests/Xamarin.Android.Tools.Bytecode-Tests/obj/*/classes .
      zip -r bin.zip bin
      exit $r
    displayName: Run Tests

  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: TestResult-*.xml
    condition: succeededOrFailed()

  - task: CopyFiles@2
    displayName: 'Copy Files to: Artifact Staging Directory'
    inputs:
      SourceFolder: $(System.DefaultWorkingDirectory)
      Contents: |
        xatb.jar
        bin.zip 
      TargetFolder: $(Build.ArtifactStagingDirectory)
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: debug'
    inputs:
      ArtifactName: debug
    condition: succeededOrFailed()
    
- job: mac_dotnet_build
  displayName: Mac - .NET Core
  pool: $(HostedMac)
  timeoutInMinutes: 20
  workspace:
    clean: all
  steps:
  - checkout: self
    submodules: recursive

  - template: templates\install-dependencies.yaml
    
  - script: make prepare-core CONFIGURATION=$(Build.Configuration)
    displayName: make prepare-core
      
  - template: templates\core-build.yaml
      
  - template: templates\core-tests.yaml

  - template: templates\fail-on-issue.yaml
