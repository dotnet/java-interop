# Java.Interop Pipelines

trigger:
  - main
  - d16-*
  - d17-*

pr:
  branches:
    include:
    - main
    - d16-*
    - d17-*
  paths:
    exclude:
    - README.md
    - Documentation/*

# Global variables
variables:
  RunningOnCI: true
  Build.Configuration: Release
  DotNetCoreVersion: 7.x
  DotNetTargetFramework: net7.0
  NetCoreTargetFrameworkPathSuffix: -$(DotNetTargetFramework)
  1ESWindowsPool: AzurePipelines-EO
  1ESWindowsImage: AzurePipelinesWindows2022compliant
  1ESMacPool: Azure Pipelines
  1ESMacImage: internal-macos-11
  DisablePipelineConfigDetector: true

jobs:
- job: windows_dotnet_build
  displayName: Windows - .NET
  pool:
    name: $(1ESWindowsPool)
    demands: 
    - ImageOverride -equals $(1ESWindowsImage)
  variables:
    VSINSTALLDIR: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\
    Codeql.Enabled: true
  timeoutInMinutes: 60
  workspace:
    clean: all
  steps:
  - checkout: self
    submodules: recursive

  - template: templates\install-dependencies.yaml

  - template: templates\core-build.yaml

  - template: templates\core-tests.yaml
    parameters:
      runNativeDotnetTests: true
      platformName: .NET - Windows

  - template: templates\fail-on-issue.yaml

  - task: ArchiveFiles@2
    displayName: 'Archive build outputs'
    inputs:
      rootFolderOrFile: 'bin'
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/bin-dotnet.zip'
      replaceExistingArchive: true
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: debug'
    inputs:
      ArtifactName: debug
    condition: succeededOrFailed()

- job: mac_dotnet_build
  displayName: Mac - .NET
  pool:
    name: $(1ESMacPool)
    vmImage: $(1ESMacImage)
  timeoutInMinutes: 20
  workspace:
    clean: all
  steps:
  - checkout: self
    submodules: recursive

  - template: templates\install-dependencies.yaml

  - template: templates\core-build.yaml

  - template: templates\core-tests.yaml
    parameters:
      runNativeTests: true
      platformName: .NET - MacOS

  - template: templates\fail-on-issue.yaml


- job: OneLocBuild
  displayName: OneLocBuild
  condition: and(eq(variables['System.TeamProject'], 'DevDiv'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  pool: VSEngSS-MicroBuild2022-1ES
  timeoutInMinutes: 30
  variables:
  - group: Xamarin-Secrets
  workspace:
    clean: all
  steps:
  - checkout: self
    clean: true

  - task: OneLocBuild@2
    displayName: OneLocBuild
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    inputs:
      locProj: Localize/LocProject.json
      outDir: $(Build.StagingDirectory)
      packageSourceAuth: patAuth
      patVariable: $(OneLocBuild--PAT)
      isCreatePrSelected: true
      repoType: gitHub
      gitHubPatVariable: $(github--pat--vs-mobiletools-engineering-service2)
      prSourceBranchPrefix: locpr
      isShouldReusePrSelected: true
      isAutoCompletePrSelected: false
      isUseLfLineEndingsSelected: true

  - task: PublishBuildArtifacts@1
    displayName: Publish Localization Files
    inputs:
      PathtoPublish: $(Build.StagingDirectory)/loc
      ArtifactName: Loc
    condition: succeededOrFailed()
