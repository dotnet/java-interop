parameters:
  condition: succeeded()
  runNativeTests: false

steps:
- task: DotNetCoreCLI@2
  displayName: 'Tests: generator'
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)$(NetCoreTargetFrameworkPathSuffix)/generator-Tests.dll
  continueOnError: true
  
- task: DotNetCoreCLI@2
  displayName: 'Tests: JavaCallableWrappers'
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)$(NetCoreTargetFrameworkPathSuffix)/Java.Interop.Tools.JavaCallableWrappers-Tests.dll
  continueOnError: true
   
- task: DotNetCoreCLI@2
  displayName: 'Tests: logcat-parse'
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)$(NetCoreTargetFrameworkPathSuffix)/logcat-parse-Tests.dll
  continueOnError: true
  
- task: DotNetCoreCLI@2
  displayName: 'Tests: ApiXmlAdjuster'
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)$(NetCoreTargetFrameworkPathSuffix)/Xamarin.Android.Tools.ApiXmlAdjuster-Tests.dll
  continueOnError: true
  
- task: DotNetCoreCLI@2
  displayName: 'Tests: Bytecode'
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)$(NetCoreTargetFrameworkPathSuffix)/Xamarin.Android.Tools.Bytecode-Tests.dll
  continueOnError: true

- task: DotNetCoreCLI@2
  displayName: 'Tests: Java.Interop.Tools.Generator'
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)$(NetCoreTargetFrameworkPathSuffix)/Java.Interop.Tools.Generator-Tests.dll
  continueOnError: true

- task: DotNetCoreCLI@2
  displayName: 'Tests: Java.Interop.Tools.JavaSource'
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)$(NetCoreTargetFrameworkPathSuffix)/Java.Interop.Tools.JavaSource-Tests.dll
  continueOnError: true

- task: DotNetCoreCLI@2
  displayName: 'Tests: Xamarin.SourceWriter'
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)$(NetCoreTargetFrameworkPathSuffix)/Xamarin.SourceWriter-Tests.dll
  continueOnError: true

- task: DotNetCoreCLI@2
  displayName: 'Tests: Java.Interop'
  condition: eq('${{ parameters.runNativeTests }}', 'true')
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)/Java.Interop-Tests.dll
  continueOnError: true

- task: DotNetCoreCLI@2
  displayName: 'Tests: Java.Interop'
  condition: or(eq('${{ parameters.runNativeDotnetTests }}', 'true'), eq('${{ parameters.runNativeTests }}', 'true'))
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)$(NetCoreTargetFrameworkPathSuffix)/Java.Interop-Tests.dll
  continueOnError: true

- task: DotNetCoreCLI@2
  displayName: 'Tests: Java.Interop.Dynamic'
  condition: eq('${{ parameters.runNativeTests }}', 'true')
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)$(NetCoreTargetFrameworkPathSuffix)/Java.Interop.Dynamic-Tests.dll
  continueOnError: true

- task: DotNetCoreCLI@2
  displayName: 'Tests: Java.Interop.Export'
  condition: eq('${{ parameters.runNativeTests }}', 'true')
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)$(NetCoreTargetFrameworkPathSuffix)/Java.Interop.Export-Tests.dll
  continueOnError: true

- task: DotNetCoreCLI@2
  displayName: 'Tests: Java.Interop'
  condition: eq('${{ parameters.runNativeTests }}', 'true')
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)/Java.Interop-PerformanceTests.dll
  continueOnError: true

- task: DotNetCoreCLI@2
  displayName: 'Tests: Java.Interop'
  condition: eq('${{ parameters.runNativeTests }}', 'true')
  inputs:
    command: test
    arguments: bin/Test$(Build.Configuration)$(NetCoreTargetFrameworkPathSuffix)/Java.Interop-PerformanceTests.dll
  continueOnError: true
