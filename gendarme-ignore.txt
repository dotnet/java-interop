R: Gendarme.Rules.BadPractice.ConstructorShouldNotCallVirtualMethodsRule
# We're attempting to establish a pattern/protocol around JavaObject + JniPeerMembers, and I hereby deem it acceptable -- in this instance -- to invoke the virtual `JniPeerMembers` property from constructors
M: System.Void Java.Interop.JavaException::.ctor()
M: System.Void Java.Interop.JavaException::.ctor(System.String)
M: System.Void Java.Interop.JavaException::.ctor(System.String,System.Exception)
M: System.Void Java.Interop.JavaObject::.ctor()

R: Gendarme.Rules.BadPractice.OnlyUseDisposeForIDisposableTypesRule
# We need *a* "cleanup" method, and I can't think of a better name than "Dispose"
# (Close? Destroy?), and for these types I don't want them to have Dispose()
# *instance* methods to avoid accidental bugs.
# See: 25de1f38, 8f7d3390
T: Java.Interop.JniPeerMembers
T: Java.Interop.JniPeerMembers/JniInstanceMethods
T: Java.Interop.JniPeerMembers/JniStaticMethods
T: Java.Interop.JniPeerMembers/JniInstanceFields
T: Java.Interop.JniPeerMembers/JniStaticFields
T: Java.Interop.JniObjectReference


R: Gendarme.Rules.BadPractice.PreferSafeHandleRule
# No, we don't want/need a SafeHandle for JniRuntime.InvocationPointer!
T: Java.Interop.JniEnvironmentInfo
T: Java.Interop.JniRuntime

R: Gendarme.Rules.Correctness.AvoidFloatingPointEqualityRule
# This is in from generated code. We could plausibly fix the generated code, but I'm not at all sure what to change it *to*.
M: System.Int32 Java.Interop.JavaSingleArray::IndexOf(System.Single)
M: System.Int32 Java.Interop.JavaDoubleArray::IndexOf(System.Double)

R: Gendarme.Rules.Correctness.CheckParametersNullityInVisibleMethodsRule
# These methods are protected, and thus we control the (public) callers,
# and we *do* check that valid values are passed.
# No check should be needed.
M: System.Boolean Java.Interop.JniPeerMembers::UsesVirtualDispatch(Java.Interop.IJavaPeerable,System.Type)
M: Java.Interop.JniPeerMembers Java.Interop.JniPeerMembers::GetPeerMembers(Java.Interop.IJavaPeerable)

# I suspect a gendarme bug; I don't see what it's talking about
M: System.Void Java.Interop.JniArgumentValue::.ctor(Java.Interop.IJavaPeerable)

R: Gendarme.Rules.Correctness.EnsureLocalDisposalRule
# We don't *want* to dispose the value!
M: Java.Interop.JniType Java.Interop.JniBoolean::get_TypeRef()
M: Java.Interop.JniType Java.Interop.JniByte::get_TypeRef()
M: Java.Interop.JniType Java.Interop.JniCharacter::get_TypeRef()
M: Java.Interop.JniType Java.Interop.JniDouble::get_TypeRef()
M: System.Void Java.Interop.JniEnvironment/Exceptions::Throw(System.Exception)
M: System.Void Java.Interop.JniEnvironmentInfo::set_EnvironmentPointer(System.IntPtr)
M: Java.Interop.JniType Java.Interop.JniFloat::get_TypeRef()
M: Java.Interop.JniType Java.Interop.JniInteger::get_TypeRef()
M: Java.Interop.JniType Java.Interop.JniLong::get_TypeRef()
M: Java.Interop.JniType Java.Interop.JniPeerMembers::get_JniPeerType()
M: Java.Interop.JniRuntime Java.Interop.JniRuntime::get_CurrentRuntime()
M: System.Void Java.Interop.JniRuntime::RaisePendingException(System.Exception)
M: System.Void Java.Interop.JniRuntime/JniValueManager::DisposeUnlessReferenced(Java.Interop.IJavaPeerable)
M: System.Object Java.Interop.JniRuntime/JniValueManager::PeekValue(Java.Interop.JniObjectReference)
M: System.Object Java.Interop.JniRuntime/JniValueManager::PeekBoxedObject(Java.Interop.JniObjectReference)
M: Java.Interop.JniType Java.Interop.JniShort::get_TypeRef()
M: Java.Interop.JniType Java.Interop.JniSystem::get_TypeRef()
M: System.Void Java.Interop.ManagedPeer::Construct(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Void Java.Interop.ManagedPeer::RegisterNativeMembers(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Object Java.Interop.ProxyValueMarshaler::CreateGenericValue(Java.Interop.JniObjectReference&,Java.Interop.JniObjectReferenceOptions,System.Type)
M: Java.Interop.JniValueMarshalerState Java.Interop.ProxyValueMarshaler::CreateGenericObjectReferenceArgumentState(System.Object,System.Reflection.ParameterAttributes)

# These look like gendarme bugs wrt C#2 `yield return` methods.
M: System.Collections.IEnumerator Java.Interop.JniRuntime/JniTypeManager/<CreateGetTypeSignaturesEnumerator>c__Iterator0::System.Collections.IEnumerable.GetEnumerator()
M: System.Collections.IEnumerator Java.Interop.JniRuntime/JniTypeManager/<CreateGetTypesEnumerator>c__Iterator1::System.Collections.IEnumerable.GetEnumerator()
M: System.Collections.IEnumerator Java.Interop.JniRuntime/JniTypeManager/<CreateGetTypesForSimpleReferenceEnumerator>c__Iterator2::System.Collections.IEnumerable.GetEnumerator()


R: Gendarme.Rules.Correctness.ReviewInconsistentIdentityRule
# It's consistent; GetHashCode()'s use of QualifiedReference pulls in everything Equals() compares.
T: Java.Interop.JniTypeSignature
# It's consistent; everything is delegated to Java!
T: Java.Interop.JavaException
T: Java.Interop.JavaObject


R: Gendarme.Rules.Design.AvoidRefAndOutParametersRule
# JniEnvironment.References mirros native API
M: System.Void Java.Interop.JniEnvironment/References::GetJavaVM(System.IntPtr&)

# Use of `int&` is to avoid making JniEnvironmentInfo public; see a314ad82
M: Java.Interop.JniObjectReference Java.Interop.JniRuntime/JniObjectReferenceManager::CreateLocalReference(Java.Interop.JniObjectReference,System.Int32&)
M: System.Void Java.Interop.JniRuntime/JniObjectReferenceManager::DeleteLocalReference(Java.Interop.JniObjectReference&,System.Int32&)
M: System.Void Java.Interop.JniRuntime/JniObjectReferenceManager::CreatedLocalReference(Java.Interop.JniObjectReference,System.Int32&)
M: System.IntPtr Java.Interop.JniRuntime/JniObjectReferenceManager::ReleaseLocalReference(Java.Interop.JniObjectReference&,System.Int32&)

# See 25de1f38 for rationale for `ref JniObjectReference`
M: System.String Java.Interop.JniEnvironment/Strings::ToString(Java.Interop.JniObjectReference&,Java.Interop.JniObjectReferenceOptions)
M: System.Exception Java.Interop.JniRuntime::GetExceptionForThrowable(Java.Interop.JniObjectReference&,Java.Interop.JniObjectReferenceOptions)
M: System.Void Java.Interop.JniRuntime/JniObjectReferenceManager::DeleteGlobalReference(Java.Interop.JniObjectReference&)
M: System.Void Java.Interop.JniRuntime/JniObjectReferenceManager::DeleteWeakGlobalReference(Java.Interop.JniObjectReference&)
M: System.Void Java.Interop.JniType::.ctor(Java.Interop.JniObjectReference&,Java.Interop.JniObjectReferenceOptions)
M: System.Void Java.Interop.JniObjectReference::Dispose(Java.Interop.JniObjectReference&)
M: System.Void Java.Interop.JniObjectReference::Dispose(Java.Interop.JniObjectReference&,Java.Interop.JniObjectReferenceOptions)

# These are thread-safe wrappers for getting-and-updating a `static` variable.
M: Java.Interop.JniType Java.Interop.JniType::GetCachedJniType(Java.Interop.JniType&,System.String)
M: Java.Interop.JniMethodInfo Java.Interop.JniType::GetCachedConstructor(Java.Interop.JniMethodInfo&,System.String)
M: Java.Interop.JniFieldInfo Java.Interop.JniType::GetCachedInstanceField(Java.Interop.JniFieldInfo&,System.String,System.String)
M: Java.Interop.JniFieldInfo Java.Interop.JniType::GetCachedStaticField(Java.Interop.JniFieldInfo&,System.String,System.String)
M: Java.Interop.JniMethodInfo Java.Interop.JniType::GetCachedInstanceMethod(Java.Interop.JniMethodInfo&,System.String,System.String)
M: Java.Interop.JniMethodInfo Java.Interop.JniType::GetCachedStaticMethod(Java.Interop.JniMethodInfo&,System.String,System.String)


R: Gendarme.Rules.Design.AvoidVisibleFieldsRule
# This type is passed to native code, and should use fields, not properties.
T: Java.Interop.JniNativeMethodRegistration


R: Gendarme.Rules.Design.AvoidVisibleNestedTypesRule
# Deliberate choice to "hide" these types from code completion for `Java.Interop.`.
# See: 045b8af7, 6a42bb89, f60906cf, e10f7cb0, etc.
T: Java.Interop.JniEnvironment/References
T: Java.Interop.JniEnvironment/Arrays
T: Java.Interop.JniEnvironment/Exceptions
T: Java.Interop.JniEnvironment/InstanceFields
T: Java.Interop.JniEnvironment/InstanceMethods
T: Java.Interop.JniEnvironment/IO
T: Java.Interop.JniEnvironment/Monitors
T: Java.Interop.JniEnvironment/Object
T: Java.Interop.JniEnvironment/StaticFields
T: Java.Interop.JniEnvironment/StaticMethods
T: Java.Interop.JniEnvironment/Strings
T: Java.Interop.JniEnvironment/Types
T: Java.Interop.JniPeerMembers/JniInstanceMethods
T: Java.Interop.JniPeerMembers/JniStaticMethods
T: Java.Interop.JniPeerMembers/JniInstanceFields
T: Java.Interop.JniPeerMembers/JniStaticFields
T: Java.Interop.JniRuntime/CreationOptions
T: Java.Interop.JniRuntime/JniObjectReferenceManager
T: Java.Interop.JniRuntime/JniTypeManager


R: Gendarme.Rules.Design.DisposableTypesShouldHaveFinalizerRule
# No, not all IDisposable types should have finalizers.
T: Java.Interop.JniArrayElements
T: Java.Interop.JniEnvironmentInfo

R: Gendarme.Rules.Design.EnumsShouldUseInt32Rule
# It's a `uint` because I'm using bitwise operators and want to keep things sane.
T: Java.Interop.JniObjectReferenceFlags


R: Gendarme.Rules.Design.FlagsShouldNotDefineAZeroValueRule
# Here, the 0 value is "None", and thus I think is acceptable;
# https://msdn.microsoft.com/en-us/library/ms229058(v=vs.110).aspx
# > **AVOID** using flag enum values of zero unless the value represents "all flags are cleared" and is named appropriately, as prescribed by the next guideline
# "Invalid" implies "all flags are cleared" to *me*...
# > **DO** name the zero value of flag enums None. For a flag enum, the value must always mean "all flags are cleared."
T: Java.Interop.JniManagedPeerStates
T: Java.Interop.JniObjectReferenceOptions


R: Gendarme.Rules.Design.MarkAssemblyWithCLSCompliantRule
# CLSCompliantAttribute isn't in the PCL profile we're targeting, so we can't apply it.
A: Java.Interop, Version=0.1.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065


R: Gendarme.Rules.Design.MarkAssemblyWithComVisibleRule
# Ditto; ComVisibleAttribute isn't in our PCL profile.
A: Java.Interop, Version=0.1.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065


R: Gendarme.Rules.Design.PreferEventsOverMethodsRule
# This isn't "raising" an event; it's "raising" a pending exception within the JVM.
M: System.Void Java.Interop.JniRuntime::RaisePendingException(System.Exception)


R: Gendarme.Rules.Design.TypesWithDisposableFieldsShouldBeDisposableRule
# JniEnvironmentInfo.Runtime is IDisposable, but JniRuntime will dispose JniEnvironmentInfo.
T: Java.Interop.JniEnvironmentInfo
# As per elsewhere, we don't want JniPeerMembers to be easily disposed by users.
# We should check/ensure that it is disposed by JniRuntime when JniRuntime is Dispose()d...
T: Java.Interop.JniPeerMembers
T: Java.Interop.JniPeerMembers/JniInstanceMethods
# It wouldn't make any sense to Dispose() CreationOptions...
T: Java.Interop.JniRuntime/CreationOptions
# JniTypeManager.Runtime is the "enclosing" runtime; it shouldn't Dispose()
T: Java.Interop.JniRuntime/JniTypeManager


R: Gendarme.Rules.Design.TypesWithNativeFieldsShouldBeDisposableRule
T: Java.Interop.JniEnvironmentInfo
T: Java.Interop.JniFieldInfo
T: Java.Interop.JniMethodInfo
T: Java.Interop.JniRuntime/CreationOptions


R: Gendarme.Rules.Design.Generic.AvoidDeclaringCustomDelegatesRule
# These are delegate types passed via P/Invoke, and thus *can't* be Func/Action
T: Java.Interop.DestroyJavaVMDelegate
T: Java.Interop.DetachCurrentThreadDelegate

R: Gendarme.Rules.Design.Generic.DoNotExposeNestedGenericSignaturesRule
M: System.Linq.Expressions.Expression`1<System.Func`4<System.Reflection.ConstructorInfo,Java.Interop.JniObjectReference,System.Object[],System.Object>> Java.Interop.JniRuntime/JniMarshalMemberBuilder::CreateConstructActivationPeerExpression(System.Reflection.ConstructorInfo)

R: Gendarme.Rules.Exceptions.DoNotSwallowErrorsCatchingNonSpecificExceptionsRule
M: System.Reflection.Assembly Java.Interop.JniRuntime/JniTypeManager::TryLoadAssembly(System.Reflection.AssemblyName)

R: Gendarme.Rules.Exceptions.ExceptionShouldBeVisibleRule
T: Java.Interop.JniLocationException

R: Gendarme.Rules.Exceptions.MissingExceptionConstructorsRule
# System.Runtime.Serialization.SerializationInfo doesn't exist in our targeted PCL profile, so we can't provide the (SerializationInfo, StreamingContext) constructor.
T: Java.Interop.JavaException
T: Java.Interop.JavaProxyThrowable
T: Java.Interop.JniLocationException

R: Gendarme.Rules.Exceptions.UseObjectDisposedExceptionRule
# I don't want ~any overhead around reference tracking
M: System.Void Java.Interop.JniRuntime/JniObjectReferenceManager::CreatedLocalReference(Java.Interop.JniObjectReference,System.Int32&)
M: Java.Interop.JniObjectReference Java.Interop.JniRuntime/JniObjectReferenceManager::CreateGlobalReference(Java.Interop.JniObjectReference)
M: Java.Interop.JniObjectReference Java.Interop.JniRuntime/JniObjectReferenceManager::CreateLocalReference(Java.Interop.JniObjectReference,System.Int32&)
M: Java.Interop.JniObjectReference Java.Interop.JniRuntime/JniObjectReferenceManager::CreateWeakGlobalReference(Java.Interop.JniObjectReference)
M: System.Void Java.Interop.JniRuntime/JniObjectReferenceManager::DeleteGlobalReference(Java.Interop.JniObjectReference&)
M: System.Void Java.Interop.JniRuntime/JniObjectReferenceManager::DeleteLocalReference(Java.Interop.JniObjectReference&,System.Int32&)
M: System.Void Java.Interop.JniRuntime/JniObjectReferenceManager::DeleteWeakGlobalReference(Java.Interop.JniObjectReference&)
M: System.Void Java.Interop.JniRuntime/JniObjectReferenceManager::OnSetRuntime(Java.Interop.JniRuntime)
M: System.IntPtr Java.Interop.JniRuntime/JniObjectReferenceManager::ReleaseLocalReference(Java.Interop.JniObjectReference&,System.Int32&)

# These *do* validate, they just validate via AssertValid() helper method
M: System.Void Java.Interop.JniRuntime::AttachCurrentThread(System.String,Java.Interop.JniObjectReference)
M: System.Void Java.Interop.JniRuntime::DestroyRuntime()
M: System.Void Java.Interop.JniRuntime/JniTypeManager::OnSetRuntime(Java.Interop.JniRuntime)
M: Java.Interop.JniTypeSignature Java.Interop.JniRuntime/JniTypeManager::GetTypeSignature(System.Type)
M: System.Collections.Generic.IEnumerable`1<Java.Interop.JniTypeSignature> Java.Interop.JniRuntime/JniTypeManager::GetTypeSignatures(System.Type)
M: System.Type Java.Interop.JniRuntime/JniTypeManager::GetType(Java.Interop.JniTypeSignature)
M: System.Collections.Generic.IEnumerable`1<System.Type> Java.Interop.JniRuntime/JniTypeManager::GetTypes(Java.Interop.JniTypeSignature)
M: System.Void Java.Interop.JniRuntime/JniTypeManager::RegisterNativeMembers(Java.Interop.JniType,System.Type,System.String)
M: Java.Interop.JniType Java.Interop.JniType::GetSuperclass()
M: System.Boolean Java.Interop.JniType::IsAssignableFrom(Java.Interop.JniType)
M: System.Boolean Java.Interop.JniType::IsInstanceOfType(Java.Interop.JniObjectReference)
M: System.Void Java.Interop.JniType::RegisterNativeMethods(Java.Interop.JniNativeMethodRegistration[])
M: System.Void Java.Interop.JniType::UnregisterNativeMethods()
M: Java.Interop.JniMethodInfo Java.Interop.JniType::GetConstructor(System.String)
M: Java.Interop.JniMethodInfo Java.Interop.JniType::GetCachedConstructor(Java.Interop.JniMethodInfo&,System.String)
M: Java.Interop.JniObjectReference Java.Interop.JniType::AllocObject()
M: Java.Interop.JniObjectReference Java.Interop.JniType::NewObject(Java.Interop.JniMethodInfo,Java.Interop.JniArgumentValue*)
M: Java.Interop.JniFieldInfo Java.Interop.JniType::GetInstanceField(System.String,System.String)
M: Java.Interop.JniFieldInfo Java.Interop.JniType::GetCachedInstanceField(Java.Interop.JniFieldInfo&,System.String,System.String)
M: Java.Interop.JniFieldInfo Java.Interop.JniType::GetStaticField(System.String,System.String)
M: Java.Interop.JniFieldInfo Java.Interop.JniType::GetCachedStaticField(Java.Interop.JniFieldInfo&,System.String,System.String)
M: Java.Interop.JniMethodInfo Java.Interop.JniType::GetInstanceMethod(System.String,System.String)
M: Java.Interop.JniMethodInfo Java.Interop.JniType::GetCachedInstanceMethod(Java.Interop.JniMethodInfo&,System.String,System.String)
M: Java.Interop.JniMethodInfo Java.Interop.JniType::GetStaticMethod(System.String,System.String)
M: Java.Interop.JniMethodInfo Java.Interop.JniType::GetCachedStaticMethod(Java.Interop.JniMethodInfo&,System.String,System.String)


R: Gendarme.Rules.Interoperability.MarshalBooleansInPInvokeDeclarationsRule
# These aren't `bool`, they're `bool*`, which is a *huge* difference!
M: System.Char* Java.Interop.NativeMethods::java_interop_jnienv_get_string_chars(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Boolean* Java.Interop.NativeMethods::java_interop_jnienv_get_boolean_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.SByte* Java.Interop.NativeMethods::java_interop_jnienv_get_byte_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Char* Java.Interop.NativeMethods::java_interop_jnienv_get_char_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Int16* Java.Interop.NativeMethods::java_interop_jnienv_get_short_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Int32* Java.Interop.NativeMethods::java_interop_jnienv_get_int_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Int64* Java.Interop.NativeMethods::java_interop_jnienv_get_long_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Single* Java.Interop.NativeMethods::java_interop_jnienv_get_float_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Double* Java.Interop.NativeMethods::java_interop_jnienv_get_double_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_release_boolean_array_elements(System.IntPtr,System.IntPtr,System.Boolean*,System.Int32)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_get_boolean_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Boolean*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_boolean_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Boolean*)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_get_primitive_array_critical(System.IntPtr,System.IntPtr,System.Boolean*)

R: Gendarme.Rules.Maintainability.AvoidAlwaysNullFieldRule
# I suspect that this is a Roslyn bug; mcs output doesn't produce this.
T: Java.Interop.JniRuntime/JniTypeManager/<CreateGetTypesForSimpleReferenceEnumerator>d__15
T: Java.Interop.JniRuntime/JniTypeManager/<CreateGetTypesForSimpleReferenceEnumerator>d__19


R: Gendarme.Rules.Maintainability.AvoidLackOfCohesionOfMethodsRule
# I'm not sure I understand "lack of cohesion" in this context, and the docs
# provide no examples. :-/
T: Java.Interop.JniArgumentValue
T: Java.Interop.JniEnvironmentInfo
T: Java.Interop.JniPeerMembers
T: Java.Interop.JniPeerMembers/JniInstanceMethods
T: Java.Interop.JniRuntime
T: Java.Interop.JniRuntime/JniObjectReferenceManager


R: Gendarme.Rules.Maintainability.VariableNamesShouldNotMatchFieldNamesRule
# This is (1) a stupid rule, and (2) is counter to FxDG about parameter
# names matching property names in constructors
# https://msdn.microsoft.com/en-us/library/ms229060(v=vs.100).aspx
# > Do use the same name for constructor parameters and a property, if the
# > constructor parameters are used to simply set the property. The only
# > difference between such parameters and the properties should be casing.
T: Java.Interop.JniEnvironmentInfo
T: Java.Interop.JniFieldInfo
T: Java.Interop.JniMethodInfo
T: Java.Interop.JniType


R: Gendarme.Rules.Naming.AvoidNonAlphanumericIdentifierRule
# I have no ideas for how to better name the enum members here. :-(
T: Java.Interop.JniVersion


R: Gendarme.Rules.Naming.UseCorrectCasingRule
# These are `internal`. Don't care.
M: Java.Interop.JniObjectReference Java.Interop.JniEnvironment/Types::_FindClass(System.String)
M: System.IntPtr Java.Interop.JniRuntime::_AttachCurrentThread(System.String,Java.Interop.JniObjectReference)
M: System.Int32 Java.Interop.JniEnvironment/References::_PushLocalFrame(System.Int32)
M: System.Int32 Java.Interop.JniEnvironment/References::_EnsureLocalCapacity(System.Int32)
M: System.Int32 Java.Interop.JniEnvironment/References::_GetJavaVM(System.IntPtr&)
M: System.Int32 Java.Interop.JniEnvironment/Exceptions::_Throw(Java.Interop.JniObjectReference)
M: System.Int32 Java.Interop.JniEnvironment/Exceptions::_ThrowNew(Java.Interop.JniObjectReference,System.String)
M: System.Int32 Java.Interop.JniEnvironment/Monitors::_MonitorEnter(Java.Interop.JniObjectReference)
M: System.Int32 Java.Interop.JniEnvironment/Monitors::_MonitorExit(Java.Interop.JniObjectReference)
M: Java.Interop.JniObjectReference Java.Interop.JniEnvironment/Object::_NewObject(Java.Interop.JniObjectReference,Java.Interop.JniMethodInfo)
M: Java.Interop.JniObjectReference Java.Interop.JniEnvironment/Object::_NewObject(Java.Interop.JniObjectReference,Java.Interop.JniMethodInfo,Java.Interop.JniArgumentValue*)
M: System.Int32 Java.Interop.JniEnvironment/Types::_RegisterNatives(Java.Interop.JniObjectReference,Java.Interop.JniNativeMethodRegistration[],System.Int32)
M: System.Int32 Java.Interop.JniEnvironment/Types::_UnregisterNatives(Java.Interop.JniObjectReference)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_get_version(System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_define_class(System.IntPtr,System.IntPtr&,System.String,System.IntPtr,System.IntPtr,System.Int32)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_find_class(System.IntPtr,System.IntPtr&,System.String)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_to_reflected_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.Byte)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_get_superclass(System.IntPtr,System.IntPtr)
M: System.Byte Java.Interop.NativeMethods::java_interop_jnienv_is_assignable_from(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_to_reflected_field(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.Byte)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_throw(System.IntPtr,System.IntPtr)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_throw_new(System.IntPtr,System.IntPtr,System.String)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_exception_occurred(System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_exception_describe(System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_exception_clear(System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_fatal_error(System.IntPtr,System.String)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_push_local_frame(System.IntPtr,System.Int32)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_pop_local_frame(System.IntPtr,System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_global_ref(System.IntPtr,System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_delete_global_ref(System.IntPtr,System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_delete_local_ref(System.IntPtr,System.IntPtr)
M: System.Byte Java.Interop.NativeMethods::java_interop_jnienv_is_same_object(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_local_ref(System.IntPtr,System.IntPtr)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_ensure_local_capacity(System.IntPtr,System.Int32)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_alloc_object(System.IntPtr,System.IntPtr&,System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_object(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_object_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_get_object_class(System.IntPtr,System.IntPtr)
M: System.Byte Java.Interop.NativeMethods::java_interop_jnienv_is_instance_of(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_get_method_id(System.IntPtr,System.IntPtr&,System.IntPtr,System.String,System.String)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_call_object_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_call_object_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Byte Java.Interop.NativeMethods::java_interop_jnienv_call_boolean_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Byte Java.Interop.NativeMethods::java_interop_jnienv_call_boolean_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.SByte Java.Interop.NativeMethods::java_interop_jnienv_call_byte_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.SByte Java.Interop.NativeMethods::java_interop_jnienv_call_byte_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Char Java.Interop.NativeMethods::java_interop_jnienv_call_char_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Char Java.Interop.NativeMethods::java_interop_jnienv_call_char_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Int16 Java.Interop.NativeMethods::java_interop_jnienv_call_short_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Int16 Java.Interop.NativeMethods::java_interop_jnienv_call_short_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_call_int_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_call_int_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Int64 Java.Interop.NativeMethods::java_interop_jnienv_call_long_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Int64 Java.Interop.NativeMethods::java_interop_jnienv_call_long_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Single Java.Interop.NativeMethods::java_interop_jnienv_call_float_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Single Java.Interop.NativeMethods::java_interop_jnienv_call_float_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Double Java.Interop.NativeMethods::java_interop_jnienv_call_double_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Double Java.Interop.NativeMethods::java_interop_jnienv_call_double_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_call_void_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_call_void_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_object_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_object_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Byte Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_boolean_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Byte Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_boolean_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.SByte Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_byte_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.SByte Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_byte_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Char Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_char_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Char Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_char_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Int16 Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_short_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int16 Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_short_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_int_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_int_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Int64 Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_long_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int64 Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_long_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Single Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_float_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Single Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_float_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Double Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_double_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Double Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_double_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_void_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_call_nonvirtual_void_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_get_field_id(System.IntPtr,System.IntPtr&,System.IntPtr,System.String,System.String)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_get_object_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Byte Java.Interop.NativeMethods::java_interop_jnienv_get_boolean_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.SByte Java.Interop.NativeMethods::java_interop_jnienv_get_byte_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Char Java.Interop.NativeMethods::java_interop_jnienv_get_char_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int16 Java.Interop.NativeMethods::java_interop_jnienv_get_short_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_get_int_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int64 Java.Interop.NativeMethods::java_interop_jnienv_get_long_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Single Java.Interop.NativeMethods::java_interop_jnienv_get_float_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Double Java.Interop.NativeMethods::java_interop_jnienv_get_double_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_object_field(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_boolean_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Byte)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_byte_field(System.IntPtr,System.IntPtr,System.IntPtr,System.SByte)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_char_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Char)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_short_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Int16)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_int_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_long_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Int64)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_float_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Single)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_double_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Double)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_get_static_method_id(System.IntPtr,System.IntPtr&,System.IntPtr,System.String,System.String)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_call_static_object_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_call_static_object_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Byte Java.Interop.NativeMethods::java_interop_jnienv_call_static_boolean_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Byte Java.Interop.NativeMethods::java_interop_jnienv_call_static_boolean_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.SByte Java.Interop.NativeMethods::java_interop_jnienv_call_static_byte_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.SByte Java.Interop.NativeMethods::java_interop_jnienv_call_static_byte_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Char Java.Interop.NativeMethods::java_interop_jnienv_call_static_char_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Char Java.Interop.NativeMethods::java_interop_jnienv_call_static_char_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Int16 Java.Interop.NativeMethods::java_interop_jnienv_call_static_short_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Int16 Java.Interop.NativeMethods::java_interop_jnienv_call_static_short_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_call_static_int_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_call_static_int_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Int64 Java.Interop.NativeMethods::java_interop_jnienv_call_static_long_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Int64 Java.Interop.NativeMethods::java_interop_jnienv_call_static_long_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Single Java.Interop.NativeMethods::java_interop_jnienv_call_static_float_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Single Java.Interop.NativeMethods::java_interop_jnienv_call_static_float_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Double Java.Interop.NativeMethods::java_interop_jnienv_call_static_double_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Double Java.Interop.NativeMethods::java_interop_jnienv_call_static_double_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_call_static_void_method(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_call_static_void_method_a(System.IntPtr,System.IntPtr&,System.IntPtr,System.IntPtr,Java.Interop.JniArgumentValue*)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_get_static_field_id(System.IntPtr,System.IntPtr&,System.IntPtr,System.String,System.String)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_get_static_object_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Byte Java.Interop.NativeMethods::java_interop_jnienv_get_static_boolean_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.SByte Java.Interop.NativeMethods::java_interop_jnienv_get_static_byte_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Char Java.Interop.NativeMethods::java_interop_jnienv_get_static_char_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int16 Java.Interop.NativeMethods::java_interop_jnienv_get_static_short_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_get_static_int_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Int64 Java.Interop.NativeMethods::java_interop_jnienv_get_static_long_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Single Java.Interop.NativeMethods::java_interop_jnienv_get_static_float_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Double Java.Interop.NativeMethods::java_interop_jnienv_get_static_double_field(System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_static_object_field(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_static_boolean_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Byte)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_static_byte_field(System.IntPtr,System.IntPtr,System.IntPtr,System.SByte)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_static_char_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Char)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_static_short_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Int16)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_static_int_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_static_long_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Int64)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_static_float_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Single)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_static_double_field(System.IntPtr,System.IntPtr,System.IntPtr,System.Double)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_string(System.IntPtr,System.IntPtr&,System.Char*,System.Int32)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_get_string_length(System.IntPtr,System.IntPtr)
M: System.Char* Java.Interop.NativeMethods::java_interop_jnienv_get_string_chars(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_release_string_chars(System.IntPtr,System.IntPtr,System.Char*)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_get_array_length(System.IntPtr,System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_object_array(System.IntPtr,System.IntPtr&,System.Int32,System.IntPtr,System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_get_object_array_element(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_object_array_element(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_boolean_array(System.IntPtr,System.Int32)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_byte_array(System.IntPtr,System.Int32)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_char_array(System.IntPtr,System.Int32)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_short_array(System.IntPtr,System.Int32)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_int_array(System.IntPtr,System.Int32)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_long_array(System.IntPtr,System.Int32)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_float_array(System.IntPtr,System.Int32)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_double_array(System.IntPtr,System.Int32)
M: System.Boolean* Java.Interop.NativeMethods::java_interop_jnienv_get_boolean_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.SByte* Java.Interop.NativeMethods::java_interop_jnienv_get_byte_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Char* Java.Interop.NativeMethods::java_interop_jnienv_get_char_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Int16* Java.Interop.NativeMethods::java_interop_jnienv_get_short_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Int32* Java.Interop.NativeMethods::java_interop_jnienv_get_int_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Int64* Java.Interop.NativeMethods::java_interop_jnienv_get_long_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Single* Java.Interop.NativeMethods::java_interop_jnienv_get_float_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Double* Java.Interop.NativeMethods::java_interop_jnienv_get_double_array_elements(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_release_boolean_array_elements(System.IntPtr,System.IntPtr,System.Boolean*,System.Int32)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_release_byte_array_elements(System.IntPtr,System.IntPtr,System.SByte*,System.Int32)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_release_char_array_elements(System.IntPtr,System.IntPtr,System.Char*,System.Int32)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_release_short_array_elements(System.IntPtr,System.IntPtr,System.Int16*,System.Int32)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_release_int_array_elements(System.IntPtr,System.IntPtr,System.Int32*,System.Int32)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_release_long_array_elements(System.IntPtr,System.IntPtr,System.Int64*,System.Int32)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_release_float_array_elements(System.IntPtr,System.IntPtr,System.Single*,System.Int32)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_release_double_array_elements(System.IntPtr,System.IntPtr,System.Double*,System.Int32)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_get_boolean_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Boolean*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_get_byte_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.SByte*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_get_char_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Char*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_get_short_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Int16*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_get_int_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Int32*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_get_long_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Int64*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_get_float_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Single*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_get_double_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Double*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_boolean_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Boolean*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_byte_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.SByte*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_char_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Char*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_short_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Int16*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_int_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Int32*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_long_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Int64*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_float_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Single*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_set_double_array_region(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,System.Double*)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_register_natives(System.IntPtr,System.IntPtr&,System.IntPtr,Java.Interop.JniNativeMethodRegistration[],System.Int32)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_unregister_natives(System.IntPtr,System.IntPtr)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_monitor_enter(System.IntPtr,System.IntPtr)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_monitor_exit(System.IntPtr,System.IntPtr)
M: System.Int32 Java.Interop.NativeMethods::java_interop_jnienv_get_java_vm(System.IntPtr,System.IntPtr&)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_get_primitive_array_critical(System.IntPtr,System.IntPtr,System.Boolean*)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_release_primitive_array_critical(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_weak_global_ref(System.IntPtr,System.IntPtr)
M: System.Void Java.Interop.NativeMethods::java_interop_jnienv_delete_weak_global_ref(System.IntPtr,System.IntPtr)
M: System.Byte Java.Interop.NativeMethods::java_interop_jnienv_exception_check(System.IntPtr)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_new_direct_byte_buffer(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int64)
M: System.IntPtr Java.Interop.NativeMethods::java_interop_jnienv_get_direct_buffer_address(System.IntPtr,System.IntPtr)
M: System.Int64 Java.Interop.NativeMethods::java_interop_jnienv_get_direct_buffer_capacity(System.IntPtr,System.IntPtr)
M: Java.Interop.JniObjectReferenceType Java.Interop.NativeMethods::java_interop_jnienv_get_object_ref_type(System.IntPtr,System.IntPtr)


R: Gendarme.Rules.Naming.UseCorrectSuffixRule
T: Java.Interop.DestroyJavaVMDelegate
T: Java.Interop.GetEnvDelegate
T: Java.Interop.AttachCurrentThreadDelegate
T: Java.Interop.DetachCurrentThreadDelegate
T: Java.Interop.AttachCurrentThreadAsDaemonDelegate
T: Java.Interop.JniObjectReferenceFlags


R: Gendarme.Rules.Performance.AvoidLargeStructureRule
# This is a *union*; it's size is sizeof(double). The rule check is buggy,
# and thinks that it's 36 bytes. Nope!
T: Java.Interop.JniArgumentValue
# This we can't make smaller; it *must* match the corresponding native struct!
T: Java.Interop.JniNativeInterfaceStruct


R: Gendarme.Rules.Performance.AvoidRepetitiveCastsRule
# The "repetitive" cast is in a Debug.Assert() call, which should be "stand-alone"
M: Java.Interop.JniObjectReference Java.Interop.JniEnvironment/Strings::NewString(System.Object)


R: Gendarme.Rules.Performance.AvoidUncalledPrivateCodeRule
# These are `public` for "completeness" reasons.
M: Java.Interop.JniObjectReferenceType Java.Interop.JniEnvironment/References::GetObjectRefType(Java.Interop.JniObjectReference)
M: Java.Interop.JniObjectReference Java.Interop.JniEnvironment/Reflection::ToReflectedMethod(Java.Interop.JniObjectReference,Java.Interop.JniMethodInfo,System.Boolean)
M: Java.Interop.JniObjectReference Java.Interop.JniEnvironment/Reflection::ToReflectedField(Java.Interop.JniObjectReference,Java.Interop.JniFieldInfo,System.Boolean)
M: Java.Interop.JniObjectReferenceFlags Java.Interop.JniObjectReference::get_Flags()
# This method is used in Java.Interop.GenericMarshaler.dll, the internals are visible to this assembly. Looks like gendarme doesn't know InternalsVisibleTo attribute.
M: Java.Interop.JniObjectReference Java.Interop.JniPeerMembers/JniInstanceMethods::AllocObject(System.Type)

# I think Gendarme is buggy here; `JavaArray<T>.CheckLength(IList<T>)` *is* used.
M: System.Int32 Java.Interop.JavaArray`1::CheckLength(System.Collections.Generic.IList`1<T>)

# `__RegisterNativeMembers()` is invoked via Reflection
M: System.Void Java.Interop.JavaProxyObject::__RegisterNativeMembers(Java.Interop.JniType,System.String)
M: System.Void Java.Interop.JavaProxyThrowable::__RegisterNativeMembers(Java.Interop.JniType,System.String)

# We need JNIEnv::FindClass() to be *bound* so that the JavaInterop_FindClass() wrapper is emitted.
# We don't want to actually *use* it, so it's `internal` and unused. Ignore
M: Java.Interop.JniObjectReference Java.Interop.JniEnvironment/Types::_FindClass(System.String)

# This is used via Reflection by Java.Interop.Dynamic.
M: Java.Interop.JniPeerMembers Java.Interop.JniPeerMembers::CreatePeerMembers(System.String,System.Type)


R: Gendarme.Rules.Performance.AvoidUnusedParametersRule
# This method is virtual; *overrides* need the parameter, not the default implementation.
M: System.Collections.Generic.IEnumerable`1<System.Type> Java.Interop.JniRuntime/JniTypeManager::CreateGetTypesForSimpleReferenceEnumerator(System.String)


R: Gendarme.Rules.Performance.UseTypeEmptyTypesRule
# The PCL profile we're using doen't *have* Type.EmptyTypes!
M: System.Void Java.Interop.JniRuntime/JniTypeManager::.cctor()

R: Gendarme.Rules.BadPractice.CheckNewExceptionWithoutThrowingRule
# This method constructs JavaException and calls ToString () on it. We only care about Java stack trace here, so we don't need to throw the exception to get managed StackTrace.
M: System.Exception Java.Interop.ManagedPeer::CreateJniLocationException()
# This method uses a JavaException and passes its PeerReference property along. We don't want to throw that property.
M: System.Void Java.Interop.JniEnvironment/Exceptions::Throw(System.Exception)

R: Gendarme.Rules.Correctness.DisposableFieldsShouldBeDisposedRule
# We call Dispose on marshalMemberBuilder field in the JniRuntime::Dispose method. Looks like gendarme bug, it doesn't handle well the `?.` operator.
T: Java.Interop.JniRuntime
