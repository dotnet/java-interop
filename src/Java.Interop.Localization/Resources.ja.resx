<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CecilResolver_XA0009" xml:space="preserve">
    <value>アセンブリの読み込み時のエラー: '{0}'。</value>
    <comment>{0} - File name</comment>
  </data>
  <data name="Generator_BG4000" xml:space="preserve">
    <value>古い定数を削除できませんでした: {0}。</value>
    <comment>{0} - The list of constants that could not be removed.
In this message, the term "constants" refers to class or interface members that have constant values.</comment>
  </data>
  <data name="Generator_BG4100" xml:space="preserve">
    <value>列挙型マッピングを処理できませんでした。テキスト行: {0}。</value>
    <comment>{0} - The line that could not be processed.</comment>
  </data>
  <data name="Generator_BG4200" xml:space="preserve">
    <value>メタデータの修正の処理中にエラーが発生しました: {0}。</value>
    <comment>{0} - The error encountered.</comment>
  </data>
  <data name="Generator_BG4300" xml:space="preserve">
    <value>XPath の指定が無効です: {0}。</value>
    <comment>{0} - The invalid XPath line.</comment>
  </data>
  <data name="Generator_BG4307" xml:space="preserve">
    <value>パスにターゲット属性名が指定されていません: {0}。</value>
    <comment>{0} - The invalid XPath line.</comment>
  </data>
  <data name="Generator_BG4400" xml:space="preserve">
    <value>予期しない 'global::' 指定です。このエラーは、Metadata.xml 変換ファイルで 'global::' が指定されている場合などに発生します。</value>
    <comment>The following are literal names and should not be translated: global::, Metadata.xml.</comment>
  </data>
  <data name="Generator_BG4500" xml:space="preserve">
    <value>'lang-features=default-interface-methods' は 'codegen-target=xamarinandroid' と互換性がありません。</value>
    <comment>The following are literal command line arguments and should not be translated: 'lang-features=default-interface-methods', 'codegen-target=xamarinandroid'.</comment>
  </data>
  <data name="Generator_BG8101" xml:space="preserve">
    <value>予期しないクラスの子 {0} です。</value>
    <comment>{0} - The unexpected child class.</comment>
  </data>
  <data name="Generator_BG8102" xml:space="preserve">
    <value>クラス '{0}' に不明な基本型 '{1}' があります。</value>
    <comment>{0}, {1} - .NET types.</comment>
  </data>
  <data name="Generator_BG8103" xml:space="preserve">
    <value>クラス '{0}' に無効な基本データ型 '{1}' があります。</value>
    <comment>{0}, {1} - .NET types.</comment>
  </data>
  <data name="Generator_BG8200" xml:space="preserve">
    <value>アセンブリ '{0}' を解析できませんでした: {1}。</value>
    <comment>{0} - Error .NET assembly.
{1} - The error encountered.</comment>
  </data>
  <data name="Generator_BG8300" xml:space="preserve">
    <value>コンストラクター '{0}' について、それを囲む型 '{1}' が見つかりませんでした。</value>
    <comment>{0} - .NET constructor method.
{1} - .NET type.</comment>
  </data>
  <data name="Generator_BG8400" xml:space="preserve">
    <value>予期しないフィールドの種類 '{0}' ({1}) です。</value>
    <comment>{0} - .NET type.
{1} - .NET field signature.</comment>
  </data>
  <data name="Generator_BG8401_Method" xml:space="preserve">
    <value>メソッド名が重複しているため、'{0}.{1}' をスキップしています。(Java の型: '{2}')</value>
    <comment>{0} - .NET type.
{1} - .NET field name.
{2} - Java type.</comment>
  </data>
  <data name="Generator_BG8401_NestedType" xml:space="preserve">
    <value>入れ子にされた型名が重複しているため、'{0}.{1}' をスキップしています。(Java の型: '{2}')</value>
    <comment>{0} - .NET type.
{1} - .NET field name.
{2} - Java type.</comment>
  </data>
  <data name="Generator_BG8401_Property" xml:space="preserve">
    <value>フィールド名またはプロパティ名が重複しているため、'{0}.{1}' をスキップしています。(Java の型: '{2}')</value>
    <comment>{0} - .NET type.
{1} - .NET field name.
{2} - Java type.</comment>
  </data>
  <data name="Generator_BG8402" xml:space="preserve">
    <value>フィールドが重複しているため、'{0}.{1}' をスキップしています。(Java の型: '{2}')</value>
    <comment>{0} - .NET type.
{1} - .NET field name.
{2} - Java type.</comment>
  </data>
  <data name="Generator_BG8403" xml:space="preserve">
    <value>型 '{0}' に、それを囲む名前空間名と一致する型名が含まれています。詳細については、https://aka.ms/BG8403 を参照してください。</value>
    <comment>{0} - Java type.</comment>
  </data>
  <data name="Generator_BG8500" xml:space="preserve">
    <value>'&lt;interface&gt;' の予期しない子要素です: '{0}'。</value>
    <comment>{0} - XML element name.
&lt;interface&gt; should not be translated.</comment>
  </data>
  <data name="Generator_BG8501" xml:space="preserve">
    <value>'{0}.{1}' にイベント名が指定されていません。</value>
    <comment>{0} - .NET type name
{1} - .NET member.</comment>
  </data>
  <data name="Generator_BG8502" xml:space="preserve">
    <value>一部のインターフェイスが無効であったため、'{0}' とその入れ子にされたすべての型を無効にしています。</value>
    <comment>{0} - .NET type name.</comment>
  </data>
  <data name="Generator_BG8503" xml:space="preserve">
    <value>一部のメソッドが無効であったため、'{0}' とその入れ子にされたすべての型を無効にしています。</value>
    <comment>{0} - .NET type name.</comment>
  </data>
  <data name="Generator_BG8504" xml:space="preserve">
    <value>'{0}.{1}' のイベント名が無効です。Metadata.xml 変換ファイルにルールを追加すると、有効な 'eventName' または 'argsType' を割り当てることができます。</value>
    <comment>{0} - .NET type name
{1} - .NET member.
The following terms should not be translated: eventName, argsType, Metadata.xml.</comment>
  </data>
  <data name="Generator_BG8506" xml:space="preserve">
    <value>'{0}.{1}' のイベント プロパティ名が無効です。Metadata.xml 変換ファイルにルールを追加すると、有効な 'eventName' または 'argsType' を割り当てることができます。</value>
    <comment>{0} - .NET type name
{1} - .NET member.
The following terms should not be translated: eventName, argsType, Metadata.xml.</comment>
  </data>
  <data name="Generator_BG8600" xml:space="preserve">
    <value>XML ファイル '{0}' が無効です: {1}。</value>
    <comment>{0} - File name
{1} - The error encountered.</comment>
  </data>
  <data name="Generator_BG8601" xml:space="preserve">
    <value>'&lt;package&gt;' 要素が見つかりません。</value>
    <comment>The following terms should not be translated: &lt;package&gt;.</comment>
  </data>
  <data name="Generator_BG8602" xml:space="preserve">
    <value>予期しないルートの子ノード: '&lt;{0}&gt;'。</value>
    <comment>{0} - XML element name.</comment>
  </data>
  <data name="Generator_BG8603" xml:space="preserve">
    <value>予期しない '&lt;package&gt;' 子ノードです: '&lt;{0}&gt;'。</value>
    <comment>{0} - XML element name.
The following terms should not be translated: &lt;package&gt;.</comment>
  </data>
  <data name="Generator_BG8604" xml:space="preserve">
    <value>入れ子にされた型 '{0}' の上位先祖型 '{1}' が見つかりませんでした。</value>
    <comment>{0}, {1} - .NET types.</comment>
  </data>
  <data name="Generator_BG8605" xml:space="preserve">
    <value>Java の型 '{0}' が見つかりませんでした (Java 参照 jar/aar または Java バインド ライブラリ NuGet が不足していないかどうかを確認してください。)</value>
    <comment>{0} - Java type.</comment>
  </data>
  <data name="Generator_BG8606" xml:space="preserve">
    <value>参照されている Java の型が見つからなかったため、一部の型またはメンバーをバインドできませんでした。詳細については、'java-resolution-report.log' ファイルを参照してください。</value>
    <comment>The following terms should not be translated: java-resolution-report.log</comment>
  </data>
  <data name="Generator_BG8700" xml:space="preserve">
    <value>メンバー '{1}' の戻り値の型 '{0}' が不明です。</value>
    <comment>{0} - Java type.
{1} - .NET member.</comment>
  </data>
  <data name="Generator_BG8701" xml:space="preserve">
    <value>メンバー '{1}' の戻り値の型 '{0}' が無効です。</value>
    <comment>{0} - Java type.
{1} - .NET member.</comment>
  </data>
  <data name="Generator_BG8800" xml:space="preserve">
    <value>メンバー '{1}' のパラメーター型 '{0}' が不明です。</value>
    <comment>{0} - Java type.
{1} - .NET member.</comment>
  </data>
  <data name="Generator_BG8801" xml:space="preserve">
    <value>メンバー '{1}' のパラメーター型 '{0}' が無効です。</value>
    <comment>{0} - Java type.
{1} - .NET member.</comment>
  </data>
  <data name="Generator_BG8A00" xml:space="preserve">
    <value>Metadata.xml 要素 '{0}' と一致するノードがありませんでした。</value>
    <comment>{0} - XML transform. (example: '&lt;remove-node path="/api/package[@name='javax.sql']"')
The following terms should not be translated: Metadata.xml.</comment>
  </data>
  <data name="Generator_BG8A07" xml:space="preserve">
    <value>名前空間の変換 '{0}' が無効です</value>
    <comment>{0} - XML transform. (example: '&lt;ns-replace source="example" replacement="Example" /&gt;')</comment>
  </data>
  <data name="Generator_BG8A08" xml:space="preserve">
    <value>Metadata.xml 要素 '{0}' に 'path' 属性がありません。</value>
    <comment>{0} - XML transform. (example: '&lt;remove-node path="/api/package[@name='javax.sql']"')
The following terms should not be translated: Metadata.xml, path.</comment>
  </data>
  <data name="Generator_BG8B00" xml:space="preserve">
    <value>メンバー '{1}' のジェネリック引数制約型 '{0}' が不明です。</value>
    <comment>{0} - .NET type name
{1} - .NET member.</comment>
  </data>
  <data name="Generator_BG8C00" xml:space="preserve">
    <value>型 '{0}' の基本インターフェイス '{1}' が見つかりませんでした。</value>
    <comment>{0}, {1} - .NET types.</comment>
  </data>
  <data name="Generator_BG8C01" xml:space="preserve">
    <value>型'{0}' では、基本インターフェイス '{1}' が無効です。</value>
    <comment>{0}, {1} - .NET types.</comment>
  </data>
  <data name="JavaCallableWrappers_XA4200" xml:space="preserve">
    <value>型 '{0}' の Java ラッパーを生成できません。'class' 型のみがサポートされています。</value>
    <comment>{0} - Java type.
The following terms should not be translated:
class.</comment>
  </data>
  <data name="JavaCallableWrappers_XA4201" xml:space="preserve">
    <value>型 '{0}' の JNI 名を特定できません。</value>
    <comment>{0} - Java type.
The following terms should not be translated: JNI.</comment>
  </data>
  <data name="JavaCallableWrappers_XA4203" xml:space="preserve">
    <value>'Name' プロパティは 'com.example.MyClass' のような完全修飾型である必要があり、'{0}' のパッケージが見つかりませんでした。</value>
    <comment>{0} - Java type.
The following terms should not be translated:
Name, com.example.MyClass.</comment>
  </data>
  <data name="JavaCallableWrappers_XA4204" xml:space="preserve">
    <value>インターフェイスの型 '{0}' を解決できません。アセンブリ参照が不足していないかどうかを確認してください。</value>
    <comment>{0} - Java interface.</comment>
  </data>
  <data name="JavaCallableWrappers_XA4205" xml:space="preserve">
    <value>[ExportField] は、パラメーターが 0 個のメソッドでのみ使用できます。</value>
    <comment>The following terms should not be translated: [ExportField].</comment>
  </data>
  <data name="JavaCallableWrappers_XA4206" xml:space="preserve">
    <value>[Export] はジェネリック型では使用できません。</value>
    <comment>The following terms should not be translated: [Export].</comment>
  </data>
  <data name="JavaCallableWrappers_XA4207" xml:space="preserve">
    <value>[ExportField] はジェネリック型では使用できません。</value>
    <comment>The following terms should not be translated: [ExportField].</comment>
  </data>
  <data name="JavaCallableWrappers_XA4208" xml:space="preserve">
    <value>'void' を返すメソッドでは、[ExportField] を使用できません。</value>
    <comment>The following terms should not be translated: [ExportField], void.</comment>
  </data>
  <data name="JavaCallableWrappers_XA4217" xml:space="preserve">
    <value>Kotlin で生成されたメソッド '{0}' は有効な Java メソッド名ではないため、オーバーライドできません。このメソッドは Kotlin からのみオーバーライドできます。</value>
    <comment>{0} - Kotlin method name.</comment>
  </data>
  <data name="JniMarshalMethodGen_JM4001" xml:space="preserve">
    <value>参照 '{0}' を事前に読み込むことができません。</value>
    <comment>{0} - assembly path</comment>
  </data>
  <data name="JniMarshalMethodGen_JM4002" xml:space="preserve">
    <value>処理する ASSEMBLY を少なくとも 1 つ指定してください。</value>
    <comment>The following terms should not be translated or have any capitalization changes: ASSEMBLY. This is a special case for this particular message. In most messages, "assembly" would be translated.</comment>
  </data>
  <data name="JniMarshalMethodGen_JM4003" xml:space="preserve">
    <value>Java VM{0}{1} を作成できません</value>
    <comment>{0} - newline, {1} - exception</comment>
  </data>
  <data name="JniMarshalMethodGen_JM4004" xml:space="preserve">
    <value>プロフィール ファイル '{0}' を読み取れません。{1}{2}</value>
    <comment>{0} - path, {1} - newline, {2} - exception. In this message, the term "profile" refers to a customized list of types to process.</comment>
  </data>
  <data name="JniMarshalMethodGen_JM4005" xml:space="preserve">
    <value>パス '{0}' が存在しません。</value>
    <comment>{0} - path</comment>
  </data>
  <data name="JniMarshalMethodGen_JM4006" xml:space="preserve">
    <value>アセンブリ '{0}' を処理できません{1}{2}{1}{3}</value>
    <comment>{0} - assembly, {1} - newline, {2} - exception message, {3} exception</comment>
  </data>
  <data name="JniMarshalMethodGen_JM8001" xml:space="preserve">
    <value>インターフェイス {0}が見つかりませんでした</value>
    <comment>{0} - interface name</comment>
  </data>
  <data name="JniMarshalMethodGen_JM8003" xml:space="preserve">
    <value>型の読み込み中に例外が発生しました。読み込めない型は処理されません。これらの型に必要な追加のアセンブリ参照が -r オプションを使用して指定されていることを確認してください。例外:{0}{1}</value>
    <comment>{0} - newline, {1} - exception. The following terms should not be translated: -r</comment>
  </data>
  <data name="JniMarshalMethodGen_JM8004" xml:space="preserve">
    <value>型 '{0}' が見つかりません。この型は処理されません。参照されているすべてのアセンブリのディレクトリに -L オプションが指定されていることを確認してください。</value>
    <comment>{0} - type
The following terms should not be translated: -L</comment>
  </data>
  <data name="JniMarshalMethodGen_JM8005" xml:space="preserve">
    <value>マーシャリング メソッドの型 '{0}' は既に存在します。アセンブリ '{1}' でマーシャリング メソッドの生成をスキップしました。-f を使用して、必要に応じて再生成を強制してください。</value>
    <comment>{0} - type, {1} - assembly name. The following terms should not be translated: -f. In this message, the term "marshal methods" refers to methods that allow interaction between the managed methods and Java methods, similar to the methods of the .NET System.Runtime.InteropServices.Marshal class.</comment>
  </data>
  <data name="JniMarshalMethodGen_JM8006" xml:space="preserve">
    <value>アセンブリ メタデータにメソッド '{0}' の定義が見つかりません。このメソッドは処理されません。参照されているすべてのアセンブリのディレクトリに -L オプションが指定されていることを確認してください。</value>
    <comment>{0} - method
The following terms should not be translated: -L</comment>
  </data>
  <data name="JniMarshalMethodGen_JM8007" xml:space="preserve">
    <value>System.Console.WriteLine() メソッドが見つかりません。デバッグ インジェクションを無効にしています。デバッグ インジェクションを有効にするには、mscorlib を含むディレクトリに -L オプションが指定されていることを確認してください。</value>
    <comment>The following terms should not be translated: -L</comment>
  </data>
</root>