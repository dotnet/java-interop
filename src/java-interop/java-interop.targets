<Project>

  <Import Project="..\..\build-tools\scripts\NativeToolchain.targets" />

  <PropertyGroup>
    <_JavaInteropLibName Condition=" $([MSBuild]::IsOSPlatform ('osx')) ">libjava-interop.dylib</_JavaInteropLibName>
    <_JavaInteropLibName Condition=" $([MSBuild]::IsOSPlatform ('linux')) ">libjava-interop.so</_JavaInteropLibName>
    <_JavaInteropLibName Condition=" $([MSBuild]::IsOSPlatform ('windows')) ">java-interop.dll</_JavaInteropLibName>
  </PropertyGroup>

  <ItemGroup Condition=" '$(NativeToolchainSupported)' == 'True' ">
    <None Include="$(IntermediateOutputPath)$(_JavaInteropLibName)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>$(_JavaInteropLibName)</TargetPath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <ClInclude Include="*.h" />
  </ItemGroup>

  <ItemGroup>
    <ClCompile Include="$(IntermediateOutputPath)jni.c" />
    <ClCompile Include="*.cc" />
  </ItemGroup>

  <Target Name="_GetJavaInteropBuildInfo">
    <PropertyGroup Condition=" $([MSBuild]::IsOSPlatform ('windows')) ">
      <_PrepareArch   Condition=" '$(NETCoreSdkRuntimeIdentifier)' == 'win-x64' ">x86_amd64</_PrepareArch>
    </PropertyGroup>

    <PropertyGroup Condition=" $([MSBuild]::IsOSPlatform ('osx')) ">
      <_CmakeOsxArch  Condition=" '$(NETCoreSdkRuntimeIdentifier)' == 'osx-x64'  ">x86_64</_CmakeOsxArch>
      <_CmakeOsxArch  Condition=" '$(NETCoreSdkRuntimeIdentifier)' == 'osx-arm64'  ">arm64</_CmakeOsxArch>
    </PropertyGroup>

    <PropertyGroup>
      <_MonoNativePath>$(NuGetPackageRoot)microsoft.netcore.app.runtime.mono.$(NETCoreSdkRuntimeIdentifier)/$(DotNetRuntimePacksVersion)/runtimes/$(NETCoreSdkRuntimeIdentifier)/native/</_MonoNativePath>
      <_MonoIncludePath>$(_MonoNativePath)include/mono-2.0</_MonoIncludePath>
      <_DEnableMono>-DENABLE_MONO_INTEGRATION=ON</_DEnableMono>
      <_DEnableOsxArchitectures Condition=" $([MSBuild]::IsOSPlatform ('osx')) ">"-DENABLE_OSX_ARCHITECTURES=$(_CmakeOsxArch)"</_DEnableOsxArchitectures>
      <_DMonoDirs>"-DMONO_INCLUDE_LIST=$(_MonoIncludePath)"</_DMonoDirs>
      <_DJdkDirs>"-DJDK_INCLUDE_LIST=@(JdkIncludePath, ';')"</_DJdkDirs>
      <_DJni_c>"-DJNI_C_PATH=$(MSBuildThisFileDirectory)$(IntermediateOutputPath)jni.c"</_DJni_c>
      <_MonoLinkFlags Condition=" $([MSBuild]::IsOSPlatform ('windows')) " >$(MSBuildThisFileDirectory)coreclr.lib</_MonoLinkFlags>
      <_MonoLinkFlags Condition=" !$([MSBuild]::IsOSPlatform ('windows')) ">-L $(_MonoNativePath) -lcoreclr</_MonoLinkFlags>
      <_DMonoLinkFlags>"-DMONO_LINK_FLAGS=$(_MonoLinkFlags)"</_DMonoLinkFlags>
      <_ExtraArgs>$([MSBuild]::Escape('$(_DJdkDirs) $(_DJni_c) $(_DEnableMono) $(_DMonoDirs) $(_DMonoLinkFlags) $(_DEnableOsxArchitectures)'))</_ExtraArgs>
    </PropertyGroup>
  </Target>

  <Target Name="_BuildJni_c"
      Inputs="$(_JNIEnvGenPath)"
      Outputs="$(IntermediateOutputPath)jni.c">
    <MakeDir Directories="$(IntermediateOutputPath)" />
    <Exec Command="$(_RunJNIEnvGen) $(IntermediateOutputPath)jni.g.cs $(IntermediateOutputPath)jni.c" />
  </Target>

  <Target Name="_BuildLibs"
      Condition=" '$(NativeToolchainSupported)' == 'True' "
      DependsOnTargets="GetNativeBuildCommands;_BuildJni_c;_GetJavaInteropBuildInfo;_UpdateCoreCLRLib"
      AfterTargets="ResolveReferences"
      Inputs="CMakeLists.txt;$(MSBuildThisFileFullPath);java-interop.csproj;@(ClInclude);@(ClCompile);coreclr.lib"
      Outputs="$(IntermediateOutputPath)$(_JavaInteropLibName)">
    <MakeDir Directories="$(IntermediateOutputPath)" />
    <ItemGroup>
      <_Cmake
          Condition=" '$(PrepareNativeToolchain)' != '' "
          Include="PrepareNativeToolchain=$(PrepareNativeToolchain) $(_PrepareArch)"
      />
      <_Cmake Include="CmakePath=$(CmakePath)" />
      <_Cmake Include="CmakeGenerator=$(CmakeGenerator)" />
      <_Cmake Include="CmakeSourceDir=$(MSBuildThisFileDirectory)" />
      <_Cmake Include="CmakeBuildDir=$(MSBuildThisFileDirectory)$(IntermediateOutputPath)" />
      <_Cmake Include="CmakeExtraArgs=$(_ExtraArgs)" />
    </ItemGroup>
    <MSBuild
        Projects="..\..\build-tools\scripts\RunCmake.proj"
        Properties="@(_Cmake)"
        Targets="Cmake"
    />
    <ItemGroup>
      <FileWrites Include="$(IntermediateOutputPath)$(_JavaInteropLibName)" />
    </ItemGroup>
  </Target>

  <Target Name="_UpdateCoreCLRLib"
      Condition="  $([MSBuild]::IsOSPlatform ('windows'))  And '$(NativeToolchainSupported)' == 'True' "
      Inputs="coreclr.def"
      Outputs="corclr.lib">
    <Exec Command="lib /def:coreclr.def /out:coreclr.lib /machine:X64" />
  </Target>

  <Target Name="_Clean"
      AfterTargets="Clean">
    <Delete Files="@(None)" />
  </Target>

</Project>
