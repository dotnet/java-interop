<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Runtime Condition="!$([MSBuild]::IsOSPlatform('windows'))">mono</Runtime>
    <LibExtension Condition="$([MSBuild]::IsOSPlatform('osx'))">dylib</LibExtension>
    <LibExtension Condition="$([MSBuild]::IsOSPlatform('linux'))">so</LibExtension>
  </PropertyGroup>
  <Target Name="Build" DependsOnTargets="$(BuildDependsOn)" />
  <Target Name="BuildJni_c"
      Inputs="$(JNIEnvGenPath)\jnienv-gen.exe"
      Outputs="jni.c">
    <MakeDir Directories="$(OutputPath)" />
    <Exec Command="$(Runtime) &quot;$(JNIEnvGenPath)\jnienv-gen.exe&quot; jni.g.cs jni.c" />
  </Target>
  <ItemGroup>
    <_UnixLib Include="$(OutputPath)\net472\lib$(OutputName).$(LibExtension)" />
    <_UnixLib Include="$(OutputPath)\netstandard2.0\lib$(OutputName).$(LibExtension)" />
  </ItemGroup>
  <Target Name="_CompileObjectFiles"
      Condition=" '$(OS)' != 'Windows_NT' "
      Inputs="@(ClCompile)"
      Outputs="obj\$(Configuration)\%(Filename).o">
    <MakeDir Directories="obj\$(Configuration)" />
    <ItemGroup>
      <_Defines Include="%(ClCompile.PreprocessorDefinitions)" />
      <_Includes Include="%(ClCompile.AdditionalIncludeDirectories)" />
    </ItemGroup>
    <PropertyGroup>
      <_Arch Condition=" Exists ('/Library/Frameworks/') ">-m64</_Arch>
      <_Cc Condition=" '%(ClCompile.Extension)' == '.c' ">gcc -std=c99 -fPIC</_Cc>
      <_Cc Condition=" '%(ClCompile.Extension)' == '.cc' ">g++ -std=c++11 -fPIC</_Cc>
      <_Def>@(_Defines->'-D%(Identity)', ' ')</_Def>
      <_Inc>@(_Includes->'-I "%(Identity)"', ' ')</_Inc>
    </PropertyGroup>
    <Exec
        Command="$(_Cc) -c -g $(_Arch) -o &quot;obj\$(Configuration)\%(ClCompile.Filename).o&quot; $(_Def) $(_Inc) &quot;%(Identity)&quot;"
    />
  </Target>
  <Target Name="BuildMac"
      Condition="$([MSBuild]::IsOSPlatform('osx'))"
      DependsOnTargets="_CompileObjectFiles"
      Inputs="@(ClCompile)"
      Outputs="@(_UnixLib)">
    <PropertyGroup>
      <_LinkFlags>-fvisibility=hidden -Wl,-undefined -Wl,suppress -Wl,-flat_namespace</_LinkFlags>
      <_Libs>$(MonoLibs)</_Libs>
      <_Files>@(ClCompile->'obj\$(Configuration)\%(Filename).o', ' ')</_Files>
    </PropertyGroup>
    <Exec Command="gcc -g -shared -m64 -std=c99 -fPIC -o &quot;%(_UnixLib.Identity)&quot; $(_LinkFlags) $(_Libs) $(_Files)" />
    <!-- Mono 4.4.0 (mono-4.4.0-branch/a3fabf1) has an incorrect shared library name. Fix it -->
    <Exec Command="install_name_tool -change /private/tmp/source-mono-4.4.0/bockbuild-mono-4.4.0-branch/profiles/mono-mac-xamarin/package-root/lib/libmonosgen-2.0.1.dylib /Library/Frameworks/Mono.framework/Libraries/libmonosgen-2.0.1.dylib &quot;%(_UnixLib.Identity)&quot;" />
  </Target>

  <Target Name="BuildUnixLibraries"
      Condition="$([MSBuild]::IsOSPlatform('linux'))"
      DependsOnTargets="_CompileObjectFiles"
      Inputs="@(ClCompile)"
      Outputs="@(_UnixLib)">
    <PropertyGroup>
      <_FixedDefines>$(DefineSymbols.Split(' '))</_FixedDefines>
    </PropertyGroup>
    <ItemGroup>
      <_Defines Include="$(_FixedDefines)" />
    </ItemGroup>
    <PropertyGroup>
      <_LinkFlags>-fvisibility=hidden -Wl,-undefined -Wl,suppress -Wl,-flat_namespace -fPIC</_LinkFlags>
      <_Libs>$(MonoLibs)</_Libs>
      <_Files>@(ClCompile->'obj\$(Configuration)\%(Filename).o', ' ')</_Files>
    </PropertyGroup>
    <Exec Command="g++ -g -shared -o &quot;%(_UnixLib.Identity)&quot; $(_LinkFlags) $(_Libs) $(_Files)" />
  </Target>
  <Target Name="Clean">
    <RemoveDir Directories="obj" />
    <Delete Files="jni.c" />
    <Delete
        Files="@(_UnixLib)"
        Condition="!$([MSBuild]::IsOSPlatform('windows'))"
    />
  </Target>
  <Target Name="Restore">
  </Target>
</Project>
