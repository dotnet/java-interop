<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Runtime Condition="'$(OS)' != 'Windows_NT'">mono</Runtime>
  </PropertyGroup>
  <Target Name="Build" DependsOnTargets="$(BuildDependsOn)" />
  <Target Name="BuildJni_c"
      Inputs="$(JNIEnvGenPath)\jnienv-gen.exe"
      Outputs="jni.c">
    <MakeDir Directories="$(OutputPath)" />
    <Exec Command="$(Runtime) &quot;$(JNIEnvGenPath)\jnienv-gen.exe&quot; jni.g.cs jni.c" />
  </Target>
  <PropertyGroup>
    <_MacLib>$(OutputPath)\lib$(OutputName).dylib</_MacLib>
  </PropertyGroup>
  <Target Name="BuildMac"
      Condition=" '$(OS)' != 'Windows_NT' And Exists ('/Library/Frameworks/')"
      Inputs="@(Compile)"
      Outputs="$(_MacLib)">
    <PropertyGroup>
      <_FixedDefines>$(DefineSymbols.Split(' '))</_FixedDefines>
    </PropertyGroup>
    <ItemGroup>
      <_Defines Include="$(_FixedDefines)" />
    </ItemGroup>
    <PropertyGroup>
      <_CppFlags>@(_Defines -&gt; '-D%(Identity)', ' ')</_CppFlags>
      <_Includes>@(MonoIncludePath-&gt;'-I %(Identity)', ' ') @(JdkIncludePath-&gt;'-I %(Identity)', ' ')</_Includes>
      <_LinkFlags>-fvisibility=hidden -Wl,-undefined -Wl,suppress -Wl,-flat_namespace</_LinkFlags>
      <_Libs>$(MonoLibs)</_Libs>
      <_Files>@(Compile -&gt; '%(Identity)', ' ')</_Files>
    </PropertyGroup>
    <MakeDir Directories="obj" />
    <Exec Command="gcc -g -shared -m64 -std=c99 -o &quot;$(_MacLib)&quot; $(_CppFlags) $(_LinkFlags) $(_Libs) $(_Includes) $(_Files)" />
    <!-- Mono 4.4.0 (mono-4.4.0-branch/a3fabf1) has an incorrect shared library name. Fix it -->
    <Exec Command="install_name_tool -change /private/tmp/source-mono-4.4.0/bockbuild-mono-4.4.0-branch/profiles/mono-mac-xamarin/package-root/lib/libmonosgen-2.0.1.dylib /Library/Frameworks/Mono.framework/Libraries/libmonosgen-2.0.1.dylib &quot;$(_MacLib)&quot;" />
  </Target>
  <Target Name="BuildUnixLibraries"
      Condition=" '$(OS)' != 'Windows_NT' And !Exists ('/Library/Frameworks/')"
      Inputs="@(Compile)"
      Outputs="$(OutputPath)\lib$(OutputName).so">
    <PropertyGroup>
      <_FixedDefines>$(DefineSymbols.Split(' '))</_FixedDefines>
    </PropertyGroup>
    <ItemGroup>
      <_Defines Include="$(_FixedDefines)" />
    </ItemGroup>
    <PropertyGroup>
      <_CppFlags>@(_Defines -&gt; '-D%(Identity)', ' ')</_CppFlags>
      <_Includes>@(MonoIncludePath-&gt;'-I %(Identity)', ' ') @(JdkIncludePath-&gt;'-I %(Identity)', ' ')</_Includes>
      <_LinkFlags>-fvisibility=hidden -Wl,-undefined -Wl,suppress -Wl,-flat_namespace -fPIC</_LinkFlags>
      <_Libs>$(MonoLibs)</_Libs>
      <_Files>@(Compile -&gt; '%(Identity)', ' ')</_Files>
    </PropertyGroup>
    <MakeDir Directories="obj" />
    <Exec Command="gcc -g -shared -std=c99 -D_GNU_SOURCE -D_POSIX_C_SOURCE=200809L -o $(OutputPath)\lib$(OutputName).so $(_CppFlags) $(_LinkFlags) $(_Libs) $(_Includes) $(_Files)" />
  </Target>
  <Target Name="Clean">
    <RemoveDir Directories="obj" />
    <Delete Files="jni.c" />
    <Delete
        Files="$(OutputPath)\lib$(OutputName).dylib"
        Condition=" '$(OS)' != 'Windows_NT' "
    />
  </Target>
  <Target Name="Restore">
  </Target>
</Project>
