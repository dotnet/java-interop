<Project>

  <PropertyGroup>
    <_NativeTimingLibName Condition=" '$(OS)' != 'Windows_NT' And Exists ('/Library/Frameworks/') ">libNativeTiming.dylib</_NativeTimingLibName>
    <_NativeTimingLibName Condition=" '$(OS)' != 'Windows_NT' And !Exists ('/Library/Frameworks/') ">libNativeTiming.so</_NativeTimingLibName>
    <_NativeTimingLibName Condition=" '$(OS)' == 'Windows_NT' ">NativeTiming.dll</_NativeTimingLibName>
    <_NativeTimingOutputPath>$(OutputPath)$(_NativeTimingLibName)</_NativeTimingOutputPath>
  </PropertyGroup>

  <ItemGroup>
    <None Include="$(_NativeTimingOutputPath)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="_BuildLibs"
      BeforeTargets="Build"
      DependsOnTargets="_PrepareCmake;_BuildNativeTiming">
  </Target>

  <Target Name="_PrepareCmake"
      Inputs="CMakeLists.txt;$(MSBuildThisFileFullPath);NativeTiming.csproj"
      Outputs="$(IntermediateOutputPath)CMakeCache.txt">
    <MakeDir Directories="$(IntermediateOutputPath)" />
    <ItemGroup Condition=" '$(MSVCDIR)' != '' ">
      <_Cl Include="$(MSVCDIR)\*\bin\Hostx64\x64\cl.exe" />
    </ItemGroup>
    <PropertyGroup Condition=" '@(_Cl->Count())' != '0' ">
      <_ClPath>%(_Cl.Identity)</_ClPath>
      <_ClPath>$(_ClPath.Replace('%5c', '/'))</_ClPath>
    </PropertyGroup>
    <PropertyGroup>
      <_JdkDirs>"-DJDK_INCLUDE_LIST=@(JdkIncludePath, ';')"</_JdkDirs>
      <_Cc Condition=" '$(_ClPath)' != '' " >"-DCMAKE_C_COMPILER=$(_ClPath)"</_Cc>
      <_CmakeGenerator Condition=" '$(OS)' != 'Windows_NT' ">-G "Unix Makefiles"</_CmakeGenerator>
      <_CmakeGenerator Condition=" '$(OS)' == 'Windows_NT' ">-G "NMake Makefiles"</_CmakeGenerator>
    </PropertyGroup>
    <Exec
        ContinueOnError="WarnAndContinue"
        Command="$(CmakePath) $(_CmakeGenerator) -S . -B $(IntermediateOutputPath) $(_JdkDirs) $(_Cc)"
    />
    <PropertyGroup>
      <_CmakeStatus>$(MSBuildLastTaskResult)</_CmakeStatus>
    </PropertyGroup>
    <ReadLinesFromFile
        Condition=" '$(_CmakeStatus)' == 'false' "
        File="$(IntermediateOutputPath)CMakeFiles/CMakeOutput.log">
      <Output TaskParameter="Lines" ItemName="_CmakeLog" />
    </ReadLinesFromFile>
    <Message
        Condition=" '$(_CmakeStatus)' == 'false' "
        Text="CMakeOutput.log"
    />
    <Message
        Condition=" '$(_CmakeStatus)' == 'false' "
        Text="@(_CmakeLog, '
')"
    />
    <ReadLinesFromFile
        Condition=" '$(_CmakeStatus)' == 'false' "
        File="$(IntermediateOutputPath)CMakeFiles/CMakeError.log">
      <Output TaskParameter="Lines" ItemName="_CmakeErrorLog" />
    </ReadLinesFromFile>
    <Message
        Condition=" '$(_CmakeStatus)' == 'false' "
        Text="CMakeError.log"
    />
    <Message
        Condition=" '$(_CmakeStatus)' == 'false' "
        Text="@(_CmakeErrorLog, '
')"
    />
    <Error
        Condition=" '$(_CmakeStatus)' == 'false' "
        Text="`cmake` failed.  See previous messages."
    />
    <Touch Files="$(IntermediateOutputPath)CMakeCache.txt" />
  </Target>

  <Target Name="_BuildNativeTiming"
      Inputs="timing.c"
      Outputs="$(_NativeTimingOutputPath)">
    <PropertyGroup>
      <_Make Condition=" '$(OS)' != 'Windows_NT' ">make</_Make>
      <_Make Condition=" '$(OS)' == 'Windows_NT' ">nmake</_Make>
    </PropertyGroup>
    <Exec
        Command="$(_Make) VERBOSE=1"
        WorkingDirectory="$(IntermediateOutputPath)"
    />
    <ItemGroup>
      <_Libs Include="$(IntermediateOutputPath)$(_NativeTimingLibName)*" />
    </ItemGroup>
    <Copy
        SourceFiles="@(_Libs)"
        DestinationFolder="$(OutputPath)"
    />
    <Touch Files="$(_NativeTimingOutputPath)" />
  </Target>

  <Target Name="_Clean"
      AfterTargets="Clean">
    <Delete Files="$(_NativeTimingOutputPath)" />
  </Target>

</Project>
