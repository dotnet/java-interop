// Metadata.xml XPath interface reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']"
[global::Java.Interop.JniTypeSignature ("java/code/IMyInterface", GenerateJavaPeer=false, InvokerType=typeof (java.code.IMyInterfaceInvoker))]
public partial interface IMyInterface : IJavaPeerable {
	private static readonly JniPeerMembers _members = new JniPeerMembers ("java/code/IMyInterface", typeof (IMyInterface), isInterface: true);

	int Count {
		// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='get_Count' and count(parameter)=0]"
		[global::Java.Interop.JniMethodSignature ("get_Count", "()I")]
		get; 

		// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='set_Count' and count(parameter)=1 and parameter[1][@type='int']]"
		[global::Java.Interop.JniMethodSignature ("set_Count", "(I)V")]
		set; 
	}

	string? Key {
		// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='get_Key' and count(parameter)=0]"
		[global::Java.Interop.JniMethodSignature ("get_Key", "()Ljava/lang/String;")]
		get; 

		// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='set_Key' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[global::Java.Interop.JniMethodSignature ("set_Key", "(Ljava/lang/String;)V")]
		set; 
	}

	int AbstractCount {
		// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='get_AbstractCount' and count(parameter)=0]"
		[global::Java.Interop.JniMethodSignature ("get_AbstractCount", "()I")]
		get; 

		// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='set_AbstractCount' and count(parameter)=1 and parameter[1][@type='int']]"
		[global::Java.Interop.JniMethodSignature ("set_AbstractCount", "(I)V")]
		set; 
	}

	static unsafe int StaticCount {
		// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='get_StaticCount' and count(parameter)=0]"
		get {
			const string __id = "get_StaticCount.()I";
			try {
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
				return __rm;
			} finally {
			}
		}
		// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='set_StaticCount' and count(parameter)=1 and parameter[1][@type='int']]"
		set {
			const string __id = "set_StaticCount.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (value);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
			}
		}
	}

	// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='GetCountForKey' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
	[global::Java.Interop.JniMethodSignature ("GetCountForKey", "(Ljava/lang/String;)I")]
	int GetCountForKey (string? key);

	// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='Key' and count(parameter)=0]"
	[global::Java.Interop.JniMethodSignature ("Key", "()Ljava/lang/String;")]
	string? Key ();

	// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='AbstractMethod' and count(parameter)=0]"
	[global::Java.Interop.JniMethodSignature ("AbstractMethod", "()V")]
	void AbstractMethod ();

	// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='StaticMethod' and count(parameter)=0]"
	[global::Java.Interop.JniMethodSignature ("StaticMethod", "()V")]
	public static unsafe void StaticMethod ()
	{
		const string __id = "StaticMethod.()V";
		try {
			_members.StaticMethods.InvokeVoidMethod (__id, null);
		} finally {
		}
	}

}

[global::Java.Interop.JniTypeSignature ("java/code/IMyInterface", GenerateJavaPeer=false)]
internal partial class IMyInterfaceInvoker : global::Java.Lang.Object, IMyInterface {
	[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
	[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
	public override global::Java.Interop.JniPeerMembers JniPeerMembers {
		get { return _members_java_code_IMyInterface; }
	}

	static readonly JniPeerMembers _members_java_code_IMyInterface = new JniPeerMembers ("java/code/IMyInterface", typeof (IMyInterfaceInvoker));

	public IMyInterfaceInvoker (ref JniObjectReference reference, JniObjectReferenceOptions options) : base (ref reference, options)
	{
	}

	public unsafe int Count {
		get {
			const string __id = "get_Count.()I";
			try {
				var __rm = _members_java_code_IMyInterface.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}
		set {
			const string __id = "set_Count.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (value);
				_members_java_code_IMyInterface.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}
	}

	public unsafe string? Key {
		get {
			const string __id = "get_Key.()Ljava/lang/String;";
			try {
				var __rm = _members_java_code_IMyInterface.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return global::Java.Interop.JniEnvironment.Strings.ToString (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
			} finally {
			}
		}
		set {
			const string __id = "set_Key.(Ljava/lang/String;)V";
			var native_value = global::Java.Interop.JniEnvironment.Strings.NewString (value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_value);
				_members_java_code_IMyInterface.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::Java.Interop.JniObjectReference.Dispose (ref native_value);
			}
		}
	}

	public unsafe int AbstractCount {
		get {
			const string __id = "get_AbstractCount.()I";
			try {
				var __rm = _members_java_code_IMyInterface.InstanceMethods.InvokeAbstractInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}
		set {
			const string __id = "set_AbstractCount.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (value);
				_members_java_code_IMyInterface.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
			}
		}
	}

	public unsafe int GetCountForKey (string? key)
	{
		const string __id = "GetCountForKey.(Ljava/lang/String;)I";
		var native_key = global::Java.Interop.JniEnvironment.Strings.NewString (key);
		try {
			JniArgumentValue* __args = stackalloc JniArgumentValue [1];
			__args [0] = new JniArgumentValue (native_key);
			var __rm = _members_java_code_IMyInterface.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
			return __rm;
		} finally {
			global::Java.Interop.JniObjectReference.Dispose (ref native_key);
		}
	}

	public unsafe string? Key ()
	{
		const string __id = "Key.()Ljava/lang/String;";
		try {
			var __rm = _members_java_code_IMyInterface.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
			return global::Java.Interop.JniEnvironment.Strings.ToString (ref __rm, JniObjectReferenceOptions.CopyAndDispose);
		} finally {
		}
	}

	public unsafe void AbstractMethod ()
	{
		const string __id = "AbstractMethod.()V";
		try {
			_members_java_code_IMyInterface.InstanceMethods.InvokeAbstractVoidMethod (__id, this, null);
		} finally {
		}
	}

}
