// Metadata.xml XPath interface reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface2']"
[Register ("java/code/IMyInterface2", "", "java.code.IMyInterface2Invoker")]
public partial interface IMyInterface2 : java.code.IMyInterface {
	// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='DoSomething' and count(parameter)=0]"
	[Register ("DoSomething", "()V", "GetDoSomethingHandler:java.code.IMyInterface2Invoker, MyAssembly")]
	void DoSomething ();
	
}
[global::Android.Runtime.Register ("java/code/IMyInterface2", DoNotGenerateAcw=true)]
internal partial class IMyInterface2Invoker : global::Java.Lang.Object, IMyInterface2 {
	static readonly JniPeerMembers _members = new JniPeerMembers ("java/code/IMyInterface2", typeof (IMyInterface2Invoker));
	
	static IntPtr java_class_ref {
		get { return _members.JniPeerType.PeerReference.Handle; }
	}
	
	public override global::Java.Interop.JniPeerMembers JniPeerMembers {
		get { return _members; }
	}
	
	protected override IntPtr ThresholdClass {
		get { return class_ref; }
	}
	
	protected override global::System.Type ThresholdType {
		get { return _members.ManagedPeerType; }
	}
	
	IntPtr class_ref;
	
	public static IMyInterface2 GetObject (IntPtr handle, JniHandleOwnership transfer)
	{
		return global::Java.Lang.Object.GetObject<IMyInterface2> (handle, transfer);
	}
	
	static IntPtr Validate (IntPtr handle)
	{
		if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
			throw new InvalidCastException (string.Format ("Unable to convert instance of type '{0}' to type '{1}'.", JNIEnv.GetClassNameFromInstance (handle), "java.code.IMyInterface2"));
		return handle;
	}
	
	protected override void Dispose (bool disposing)
	{
		if (this.class_ref != IntPtr.Zero)
			JNIEnv.DeleteGlobalRef (this.class_ref);
		this.class_ref = IntPtr.Zero;
		base.Dispose (disposing);
	}
	
	public IMyInterface2Invoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
	{
		IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
		this.class_ref = JNIEnv.NewGlobalRef (local_ref);
		JNIEnv.DeleteLocalRef (local_ref);
	}
	
	static Delegate cb_DoSomething;
	#pragma warning disable 0169
	static Delegate GetDoSomethingHandler ()
	{
		if (cb_DoSomething == null)
			cb_DoSomething = JNINativeWrapper.CreateDelegate ((_JniMarshal_PP_V) n_DoSomething);
		return cb_DoSomething;
	}
	static void n_DoSomething (IntPtr jnienv, IntPtr native__this)
	{
		var __this = global::Java.Lang.Object.GetObject<java.code.IMyInterface2> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
		__this.DoSomething ();
	}
	#pragma warning restore 0169
	IntPtr id_DoSomething;
	public unsafe void DoSomething ()
	{
		if (id_DoSomething == IntPtr.Zero)
			id_DoSomething = JNIEnv.GetMethodID (class_ref, "DoSomething", "()V");
		JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_DoSomething);
	}
	
}
