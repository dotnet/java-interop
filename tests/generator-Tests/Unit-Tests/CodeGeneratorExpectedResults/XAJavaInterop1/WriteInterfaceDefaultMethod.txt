// Metadata.xml XPath interface reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']"
[Register ("java/code/IMyInterface", "", "java.code.IMyInterfaceInvoker")]
public partial interface IMyInterface : IJavaObject, IJavaPeerable {
	private static readonly JniPeerMembers _members = new XAPeerMembers ("java/code/IMyInterface", typeof (IMyInterface), isInterface: true);

	private static Delegate cb_DoSomething;
#pragma warning disable 0169
	private static Delegate GetDoSomethingHandler ()
	{
		if (cb_DoSomething == null)
			cb_DoSomething = JNINativeWrapper.CreateDelegate ((_JniMarshal_PP_V) n_DoSomething);
		return cb_DoSomething;
	}

	private static void n_DoSomething (IntPtr jnienv, IntPtr native__this)
	{
		var __this = global::Java.Lang.Object.GetObject<java.code.IMyInterface> (jnienv, native__this, JniHandleOwnership.DoNotTransfer);
		__this.DoSomething ();
	}
#pragma warning restore 0169

	// Metadata.xml XPath method reference: path="/api/package[@name='java.code']/interface[@name='IMyInterface']/method[@name='DoSomething' and count(parameter)=0]"
	[Register ("DoSomething", "()V", "GetDoSomethingHandler:java.code.IMyInterface, MyAssembly")]
	 virtual unsafe void DoSomething ()
	{
		const string __id = "DoSomething.()V";
		try {
			_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
		} finally {
		}
	}

}

