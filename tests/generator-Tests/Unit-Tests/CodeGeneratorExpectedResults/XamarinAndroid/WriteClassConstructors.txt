protected MyClass (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer) {}

static IntPtr id_ctor;
// Metadata.xml XPath constructor reference: path="/api/package[@name='java.code']/class[@name='MyClass']/constructor[@name='MyClass' and count(parameter)=0]"
[Register (".ctor", "()V", "")]
 unsafe MyClass ()
	: base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
{
	if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
		return;

	try {
		if (((object) this).GetType () != typeof (MyClass)) {
			SetHandle (
					global::Android.Runtime.JNIEnv.StartCreateInstance (((object) this).GetType (), "()V"),
					JniHandleOwnership.TransferLocalRef);
			global::Android.Runtime.JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, "()V");
			return;
		}

		if (id_ctor == IntPtr.Zero)
			id_ctor = JNIEnv.GetMethodID (class_ref, "<init>", "()V");
		SetHandle (
				global::Android.Runtime.JNIEnv.StartCreateInstance (class_ref, id_ctor),
				JniHandleOwnership.TransferLocalRef);
		JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, class_ref, id_ctor);
	} finally {
	}
}

static IntPtr id_ctor_Ljava_lang_String_;
// Metadata.xml XPath constructor reference: path="/api/package[@name='java.code']/class[@name='MyClass']/constructor[@name='MyClass' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
[Register (".ctor", "(Ljava/lang/String;)V", "")]
 unsafe MyClass (string p0)
	: base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
{
	if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
		return;

	IntPtr native_p0 = JNIEnv.NewString (p0);
	try {
		JValue* __args = stackalloc JValue [1];
		__args [0] = new JValue (native_p0);
		if (((object) this).GetType () != typeof (MyClass)) {
			SetHandle (
					global::Android.Runtime.JNIEnv.StartCreateInstance (((object) this).GetType (), "(Ljava/lang/String;)V", __args),
					JniHandleOwnership.TransferLocalRef);
			global::Android.Runtime.JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, "(Ljava/lang/String;)V", __args);
			return;
		}

		if (id_ctor_Ljava_lang_String_ == IntPtr.Zero)
			id_ctor_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "<init>", "(Ljava/lang/String;)V");
		SetHandle (
				global::Android.Runtime.JNIEnv.StartCreateInstance (class_ref, id_ctor_Ljava_lang_String_, __args),
				JniHandleOwnership.TransferLocalRef);
		JNIEnv.FinishCreateInstance (((global::Java.Lang.Object) this).Handle, class_ref, id_ctor_Ljava_lang_String_, __args);
	} finally {
		JNIEnv.DeleteLocalRef (native_p0);
	}
}

