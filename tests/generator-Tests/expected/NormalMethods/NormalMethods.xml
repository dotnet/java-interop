<?xml version="1.0" encoding="UTF-8" ?>
<api>
	<package name="java.lang">
	    <class abstract="false" deprecated="not deprecated" final="false" name="Object" static="false" visibility="public">
	    </class>
	    <class abstract="false" deprecated="not deprecated" final="false" name="Class" extends="java.lang.Object" extends-generic-aware="java.lang.Object" static="false" visibility="public">
	        <typeParameters>
	            <typeParameter name="T" />
	        </typeParameters>
	    </class>
	    <class abstract="false" deprecated="not deprecated" final="false" name="Throwable" extends="java.lang.Object" extends-generic-aware="java.lang.Object" static="false" visibility="public">
	    </class>
	    <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object"
	    	final="false" name="Integer" static="false" visibility="public">
	    </class>
	  </package>
	<package name="xamarin.test">
    <!--
      public class SomeObject {
        // `int[]` to inhibit turning into a `Type` property.
        public  int[]   getType();
        public  int     handle(Object o, Throwable t);
        public  int     IntegerMethod();
        public  void    VoidMethod();
        public  String  StringMethod();
        public  Object  ObjectMethod();
        public  void    VoidMethodWithParams(String astring, int anint, Object anObject);
        @Deprecated
        public  int     ObsoleteMethod();
        public  void    ArrayListTest(ArrayList<Integer> p0);
      }
      -->
	  <class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" 
	  		final="false" name="SomeObject" static="false" visibility="public">
			<constructor deprecated="not deprecated" final="false" name="SomeObject" native="false" return="int" static="false" synchronized="false" visibility="public">
				<parameter name="c" type="java.lang.Class&lt;? extends xamarin.test.SomeObject&gt;" />
			</constructor>
			<method abstract="false" deprecated="not deprecated" final="false" name="getType" native="false" return="int[]" static="false" synchronized="false" visibility="public">
			</method>
			<method abstract="false" deprecated="not deprecated" final="false" name="handle" native="false" return="int" static="false" synchronized="false" visibility="public">
				<parameter name="o" type="java.lang.Object" />
				<parameter name="t" type="java.lang.Throwable" />
			</method>
			<method abstract="false" deprecated="not deprecated" final="false" name="IntegerMethod" native="false" return="int" static="false" synchronized="false" visibility="public">
	  		</method>
	  		<method abstract="false" deprecated="not deprecated" final="false" name="VoidMethod" native="false" return="void" static="false" synchronized="false" visibility="public">
      		</method>
      		<method abstract="false" deprecated="not deprecated" final="false" name="StringMethod" native="false" return="java.lang.String" static="false" synchronized="false" visibility="public">
      		</method>
      		<method abstract="false" deprecated="not deprecated" final="false" name="ObjectMethod" native="false" return="java.lang.Object" static="false" synchronized="false" visibility="public">
      		</method>
      		<method abstract="false" deprecated="not deprecated" final="false" name="VoidMethodWithParams" native="false" return="void" static="false" synchronized="false" visibility="public">
      			<parameter name="astring" type="java.lang.String">
        	    </parameter>
        	    <parameter name="anint" type="int">
        	    </parameter>
        	    <parameter name="anObject" type="java.lang.Object">
        	    </parameter>
      		</method>
      		<method abstract="false" deprecated="Deprecated please use IntegerMethod instead" final="false" name="ObsoleteMethod" native="false" return="int" static="false" synchronized="false" visibility="public">
      		</method>
      		<method abstract="false" deprecated="not deprecated" final="false" name="ArrayListTest" native="false" return="void" static="false" synchronized="false" visibility="public">
      			<parameter name="p0" type="java.util.ArrayList&lt;java.lang.Integer&gt;" />
      		</method>
	    </class>
		<class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object"
			final="false" name="A" static="true" visibility="public">
			<method abstract="false" deprecated="not deprecated" final="false" name="getHandle" native="false" return="int" static="false" synchronized="false" visibility="public">
			</method>
		</class>
		<class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" 
			final="false" name="A.B" static="true" visibility="public">
			<typeParameters>
				<typeParameter name="T">
					<genericConstraints>
						<genericConstraint type="xamarin.test.A.B"/>
					</genericConstraints>
				</typeParameter>
			</typeParameters>
			<method abstract="false" deprecated="not deprecated" final="false" name="setCustomDimension" native="false" return="T" static="false" synchronized="false" visibility="public">
				<parameter name="index" type="int">
				</parameter>
			</method>
		</class>
		<class abstract="false" deprecated="not deprecated" extends="java.lang.Object" extends-generic-aware="java.lang.Object" 
			final="false" name="C" static="true" visibility="public">
			<typeParameters>
				<typeParameter name="T">
					<genericConstraints>
						<genericConstraint type="xamarin.test.C"/>
					</genericConstraints>
				</typeParameter>
			</typeParameters>
			<method abstract="false" deprecated="not deprecated" final="false" name="setCustomDimension" native="false" return="T" static="false" synchronized="false" visibility="public">
				<parameter name="index" type="int">
				</parameter>
			</method>
		</class>
	</package>
</api>

